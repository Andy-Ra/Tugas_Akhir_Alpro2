/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugas_akhir;

import java.awt.CardLayout;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class framebaa extends javax.swing.JFrame {
    public static Connection con = new koneksi().ambil_koneksi();
    
    
    //untuk mahasiswa
    private static String nrp_mhs, email_mhs, nama_mhs, prodi_mhs, agama_mhs, jk_mhs, kota_mhs, ttl_mhs, 
            almt_mhs, hp_mhs, stts_mhs, get_email_mhs, get_email_dsn;
    private static int indx_kota_mhs;
    
    //untuk orang tua
    private static String nama_ayah_mhs, ktp_ayah_mhs, nama_ibu_mhs, 
            ktp_ibu_mhs, kota_ortu_mhs, hp_ortu_mhs, alamat_ortu_mhs;
    private static int indx_kota_ortu_mhs;
    
    //untuk dosen
    private static String NIP_dsn, NIDN_dsn, Nama_dsn, Email_dsn, Alamat_dsn, Telepon_dsn, 
            jk_dsn, ttldsn, ptn_dsn, stts_dsn, ja_dsn, get_nip_dsn;
    
    //untuk matakuliah
    private static String nama_dsn_jdwl,mtkl_jdwl, prodi_mk, waktu, ruang,jdwl_prodi, 
            get_nip_dsn_jdwl, get_kode_mk_jdwl, sd_tgl_jdwl, st_wkt, kode_kelas;
    public static int jmlh_pert;
    
    //untuk wisuda
    public static String nrp_list_wsd, ipk_wsd, jdl_wsd, prodi_wsd ,nrp_wsd, nip_wsd, path_foto;
    /**
     * Creates new form framebaa
     */
    public framebaa() {
        initComponents();
        tampilkota();
        clear_all();
        tampil_matkul();
        reset_waktu();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grp_jk_mhs_baa = new javax.swing.ButtonGroup();
        grp_jk_dsn_baa = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        title_baa = new javax.swing.JLabel();
        panelinduk_baa = new javax.swing.JPanel();
        panel_add_mhs = new javax.swing.JPanel();
        border2 = new javax.swing.JPanel();
        input_mhs = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        panel_nrp = new javax.swing.JPanel();
        txt_NRP_baa = new javax.swing.JTextField();
        cb_NRP_baa = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txt_Email_mhs_baa = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_Nama_mhs_baa = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbx_Prodi_baa = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        pnl_jk_mhs_baa = new javax.swing.JPanel();
        rd_laki_mhs = new javax.swing.JRadioButton();
        rd_perempuan_mhs = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        cbx_Agama_mhs_baa = new javax.swing.JComboBox<>();
        jLabel2_dsn1 = new javax.swing.JLabel();
        txt_ttl_mhs_baa = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_Alamat_mhs_baa = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cbx_kota_mhs_baa = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        txt_nohp_mhs_baa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cb_Status_mhs_baa = new javax.swing.JCheckBox();
        btnadd_mhs_baa = new javax.swing.JButton();
        btn_clear_mhs_baa = new javax.swing.JButton();
        panel_add_ortu = new javax.swing.JPanel();
        border1 = new javax.swing.JPanel();
        input_ortu = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtnm_ayah_baa = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtktp_ayah_baa = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtnm_ibu_baa = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtktp_ibu_baa = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_alamatortu_baa = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        cb_kota_ortu_baa = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        txt_telp_ortu_baa = new javax.swing.JTextField();
        btnadd_ortu_baa = new javax.swing.JButton();
        btn_clear_ortu_baa = new javax.swing.JButton();
        btn_back_mhs = new javax.swing.JButton();
        panel_mhs_tabel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        panel_list_mhs = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        list_all_mahasiswa = new javax.swing.JTable();
        panel_detail_mhs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lb_ldt_ayah = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lb_ldt_ibu = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lb_telp_ortu = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lb_almt_ortu = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lb_kota_ortu = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        panel_dsn = new javax.swing.JPanel();
        border = new javax.swing.JPanel();
        input_dsn = new javax.swing.JPanel();
        jLabel5_dsn = new javax.swing.JLabel();
        panelnip = new javax.swing.JPanel();
        txt_NIP_dsn_baa = new javax.swing.JTextField();
        cbx_nip_dsn_baa = new javax.swing.JComboBox<>();
        jLabel12_dsn = new javax.swing.JLabel();
        txt_NIDN_dsn_baa = new javax.swing.JTextField();
        jLabel6_dsn = new javax.swing.JLabel();
        txt_Nama_dsn_baa = new javax.swing.JTextField();
        jLabel11_dsn = new javax.swing.JLabel();
        txt_Alamat_dsn_baa = new javax.swing.JTextField();
        jLabel21_dsn = new javax.swing.JLabel();
        txt_nohp_dsn_baa = new javax.swing.JTextField();
        jLabel1_dsn = new javax.swing.JLabel();
        txt_email_dsn_baa = new javax.swing.JTextField();
        jLabel9_dsn = new javax.swing.JLabel();
        pnl_jk_dsn = new javax.swing.JPanel();
        rd_laki_dsn_baa = new javax.swing.JRadioButton();
        rd_perempuan_dsn_baa = new javax.swing.JRadioButton();
        jLabel2_dsn = new javax.swing.JLabel();
        txt_ttl_dsn_baa = new javax.swing.JTextField();
        jLabel8_dsn = new javax.swing.JLabel();
        cb_Status_dsn_baa = new javax.swing.JCheckBox();
        jLabel3_dsn = new javax.swing.JLabel();
        cb_pendidikan_dsn_baa = new javax.swing.JComboBox<>();
        jLabel7_dsn = new javax.swing.JLabel();
        txt_jbtn_dsn_baa = new javax.swing.JTextField();
        btn_Ubah_dsn_baa = new javax.swing.JButton();
        btn_reset_dsn = new javax.swing.JButton();
        panel_dsn_tabel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list_all_dsn = new javax.swing.JTable();
        btn_hps_dsn = new javax.swing.JButton();
        panel_add_jadwal = new javax.swing.JPanel();
        border3 = new javax.swing.JPanel();
        input_jadwal = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jdwl_dosen = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        cb_jdwl_prodi = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        cb_jdwl_matkul = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jdt_tgl_jdwl = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        Date waktu = new Date();
        SpinnerDateModel sm_waktu = new SpinnerDateModel(waktu, null, null, Calendar.HOUR_OF_DAY);

        sp_waktu = new javax.swing.JSpinner(sm_waktu);
        jLabel29 = new javax.swing.JLabel();
        sp_jmlh_pertemuan = new javax.swing.JSpinner();
        jLabel31 = new javax.swing.JLabel();
        cb_jdwl_ruang = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Panel_Gabungan = new javax.swing.JPanel();
        ccb_ti = new javax.swing.JCheckBox();
        ccb_dkv = new javax.swing.JCheckBox();
        ccb_mi = new javax.swing.JCheckBox();
        ccb_si = new javax.swing.JCheckBox();
        btnadd_jadwal = new javax.swing.JButton();
        btn_clear_jadwal = new javax.swing.JButton();
        panel_matkul = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        panel_list_matkul = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        list_all_matkul = new javax.swing.JTable();
        panel_jadwal = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelJadwal = new javax.swing.JTable();
        panel_wisuda_baa = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_wisuda_baa = new javax.swing.JTable();
        btn_tolak = new javax.swing.JButton();
        btn_terima = new javax.swing.JButton();
        btn_detail = new javax.swing.JButton();
        panel_add_wsd_mhs = new javax.swing.JPanel();
        input_mhs_wisuda = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        cb_wsd_prodi_baa = new javax.swing.JComboBox<>();
        jLabel49 = new javax.swing.JLabel();
        cb_wsd_mhs_baa = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        txt_ipk_wsd_baa = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        cb_wsd_dsn_pbb_baa = new javax.swing.JComboBox<>();
        jLabel44 = new javax.swing.JLabel();
        txt_judul_ta_baa = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        btnFoto_wsd_baa = new javax.swing.JButton();
        ntf_fotowsd = new javax.swing.JLabel();
        btn_add_mhs_wisuda = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_mhs = new javax.swing.JMenu();
        mn_mhs = new javax.swing.JMenu();
        add_data_mhs = new javax.swing.JMenuItem();
        update_data_mhs = new javax.swing.JMenuItem();
        list_data_mhs = new javax.swing.JMenuItem();
        mn_wisuda = new javax.swing.JMenu();
        mn_tmbh_wsd = new javax.swing.JMenuItem();
        mn_peng_wis = new javax.swing.JMenuItem();
        mn_list_wis_acc = new javax.swing.JMenuItem();
        menu_dosen = new javax.swing.JMenu();
        add_data_dsn = new javax.swing.JMenuItem();
        update_data_dsn = new javax.swing.JMenuItem();
        list_data_dsn = new javax.swing.JMenuItem();
        menu_akademik = new javax.swing.JMenu();
        add_Jadwal = new javax.swing.JMenuItem();
        list_data_jadwal = new javax.swing.JMenuItem();
        list_data_mk = new javax.swing.JMenuItem();
        menu_logout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        title_baa.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        title_baa.setText("BAA");
        jPanel1.add(title_baa, new java.awt.GridBagConstraints());

        panelinduk_baa.setLayout(new java.awt.CardLayout());

        border2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ubah Data Mahasiswa"));

        input_mhs.setLayout(new java.awt.GridLayout(11, 2, 0, 15));

        jLabel5.setText("NRP");
        input_mhs.add(jLabel5);

        txt_NRP_baa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_NRP_baaFocusLost(evt);
            }
        });

        cb_NRP_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH NRP ===" }));
        cb_NRP_baa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_NRP_baaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panel_nrpLayout = new javax.swing.GroupLayout(panel_nrp);
        panel_nrp.setLayout(panel_nrpLayout);
        panel_nrpLayout.setHorizontalGroup(
            panel_nrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_NRP_baa)
            .addComponent(cb_NRP_baa, 0, 205, Short.MAX_VALUE)
        );
        panel_nrpLayout.setVerticalGroup(
            panel_nrpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_nrpLayout.createSequentialGroup()
                .addComponent(txt_NRP_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_NRP_baa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        input_mhs.add(panel_nrp);

        jLabel12.setText("Email");
        input_mhs.add(jLabel12);

        txt_Email_mhs_baa.setEditable(false);
        input_mhs.add(txt_Email_mhs_baa);

        jLabel6.setText("Nama");
        input_mhs.add(jLabel6);
        input_mhs.add(txt_Nama_mhs_baa);

        jLabel7.setText("Prodi");
        input_mhs.add(jLabel7);

        cbx_Prodi_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "===PILIH===", "> Teknik Informatika", "> Sistem Informasi", "> Manajemen Informatika", "> DKV" }));
        input_mhs.add(cbx_Prodi_baa);

        jLabel9.setText("Jenis Kelamin");
        input_mhs.add(jLabel9);

        pnl_jk_mhs_baa.setLayout(new java.awt.GridLayout(1, 0));

        grp_jk_mhs_baa.add(rd_laki_mhs);
        rd_laki_mhs.setText("Laki-laki");
        pnl_jk_mhs_baa.add(rd_laki_mhs);

        grp_jk_mhs_baa.add(rd_perempuan_mhs);
        rd_perempuan_mhs.setText("Perempuan");
        pnl_jk_mhs_baa.add(rd_perempuan_mhs);

        input_mhs.add(pnl_jk_mhs_baa);

        jLabel10.setText("Agama");
        input_mhs.add(jLabel10);

        cbx_Agama_mhs_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "===PILIH===", "> Islam", "> Kristen", "> Katholik", "> Hindu", "> Budha", "> Konghucu" }));
        input_mhs.add(cbx_Agama_mhs_baa);

        jLabel2_dsn1.setText("Tempat Tanggal Lahir");
        input_mhs.add(jLabel2_dsn1);
        input_mhs.add(txt_ttl_mhs_baa);

        jLabel11.setText("Alamat");
        input_mhs.add(jLabel11);
        input_mhs.add(txt_Alamat_mhs_baa);

        jLabel15.setText("Kota");
        input_mhs.add(jLabel15);

        cbx_kota_mhs_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== KOTA ===" }));
        input_mhs.add(cbx_kota_mhs_baa);

        jLabel21.setText("No Hp");
        input_mhs.add(jLabel21);
        input_mhs.add(txt_nohp_mhs_baa);

        jLabel8.setText("Status Masuk");
        input_mhs.add(jLabel8);

        cb_Status_mhs_baa.setText("Aktif");
        input_mhs.add(cb_Status_mhs_baa);

        javax.swing.GroupLayout border2Layout = new javax.swing.GroupLayout(border2);
        border2.setLayout(border2Layout);
        border2Layout.setHorizontalGroup(
            border2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(border2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(border2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(input_mhs, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        border2Layout.setVerticalGroup(
            border2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
            .addGroup(border2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(border2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(input_mhs, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        btnadd_mhs_baa.setText("NEXT");
        btnadd_mhs_baa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd_mhs_baaActionPerformed(evt);
            }
        });

        btn_clear_mhs_baa.setText("CLEAR");
        btn_clear_mhs_baa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear_mhs_baaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_mhsLayout = new javax.swing.GroupLayout(panel_add_mhs);
        panel_add_mhs.setLayout(panel_add_mhsLayout);
        panel_add_mhsLayout.setHorizontalGroup(
            panel_add_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_mhsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_add_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(border2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_add_mhsLayout.createSequentialGroup()
                        .addGap(0, 377, Short.MAX_VALUE)
                        .addComponent(btn_clear_mhs_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnadd_mhs_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_add_mhsLayout.setVerticalGroup(
            panel_add_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_mhsLayout.createSequentialGroup()
                .addComponent(border2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_add_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd_mhs_baa)
                    .addComponent(btn_clear_mhs_baa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelinduk_baa.add(panel_add_mhs, "cv_add_mhs");

        border1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tambah Data Orang Tua Mahasiswa"));

        input_ortu.setLayout(new java.awt.GridLayout(7, 2, 0, 15));

        jLabel13.setText("Nama Ayah");
        input_ortu.add(jLabel13);
        input_ortu.add(txtnm_ayah_baa);

        jLabel14.setText("No KTP Ayah");
        input_ortu.add(jLabel14);
        input_ortu.add(txtktp_ayah_baa);

        jLabel16.setText("Nama Ibu");
        input_ortu.add(jLabel16);
        input_ortu.add(txtnm_ibu_baa);

        jLabel17.setText("No KTP Ibu");
        input_ortu.add(jLabel17);
        input_ortu.add(txtktp_ibu_baa);

        jLabel18.setText("Alamat Orang Tua");
        input_ortu.add(jLabel18);
        input_ortu.add(txt_alamatortu_baa);

        jLabel20.setText("Kota Orang Tua");
        input_ortu.add(jLabel20);

        cb_kota_ortu_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== KOTA ===" }));
        input_ortu.add(cb_kota_ortu_baa);

        jLabel19.setText("Telp Orang Tua");
        input_ortu.add(jLabel19);
        input_ortu.add(txt_telp_ortu_baa);

        javax.swing.GroupLayout border1Layout = new javax.swing.GroupLayout(border1);
        border1.setLayout(border1Layout);
        border1Layout.setHorizontalGroup(
            border1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
            .addGroup(border1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(border1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(input_ortu, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        border1Layout.setVerticalGroup(
            border1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 282, Short.MAX_VALUE)
            .addGroup(border1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(border1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(input_ortu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        btnadd_ortu_baa.setText("ADD");
        btnadd_ortu_baa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd_ortu_baaActionPerformed(evt);
            }
        });

        btn_clear_ortu_baa.setText("CLEAR");
        btn_clear_ortu_baa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear_ortu_baaActionPerformed(evt);
            }
        });

        btn_back_mhs.setText("BACK");
        btn_back_mhs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_back_mhsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_ortuLayout = new javax.swing.GroupLayout(panel_add_ortu);
        panel_add_ortu.setLayout(panel_add_ortuLayout);
        panel_add_ortuLayout.setHorizontalGroup(
            panel_add_ortuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_ortuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_add_ortuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_add_ortuLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btn_back_mhs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_clear_ortu_baa)
                        .addGap(18, 18, 18)
                        .addComponent(btnadd_ortu_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(panel_add_ortuLayout.createSequentialGroup()
                        .addComponent(border1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        panel_add_ortuLayout.setVerticalGroup(
            panel_add_ortuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_ortuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(border1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_add_ortuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd_ortu_baa)
                    .addComponent(btn_clear_ortu_baa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_back_mhs))
                .addGap(187, 187, 187))
        );

        panelinduk_baa.add(panel_add_ortu, "cv_add_ortu_baa");

        panel_list_mhs.setBorder(javax.swing.BorderFactory.createTitledBorder("List Mahasiswa"));

        list_all_mahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NRP", "Nama", "Email", "Prodi", "Alamat", "Jenis Kelamin", "No Hp", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        list_all_mahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_all_mahasiswaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(list_all_mahasiswa);
        if (list_all_mahasiswa.getColumnModel().getColumnCount() > 0) {
            list_all_mahasiswa.getColumnModel().getColumn(4).setHeaderValue("Alamat");
            list_all_mahasiswa.getColumnModel().getColumn(5).setHeaderValue("Jenis Kelamin");
            list_all_mahasiswa.getColumnModel().getColumn(6).setHeaderValue("No Hp");
            list_all_mahasiswa.getColumnModel().getColumn(7).setHeaderValue("Status");
        }

        javax.swing.GroupLayout panel_list_mhsLayout = new javax.swing.GroupLayout(panel_list_mhs);
        panel_list_mhs.setLayout(panel_list_mhsLayout);
        panel_list_mhsLayout.setHorizontalGroup(
            panel_list_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panel_list_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_list_mhsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panel_list_mhsLayout.setVerticalGroup(
            panel_list_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 307, Short.MAX_VALUE)
            .addGroup(panel_list_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_list_mhsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        panel_detail_mhs.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Orang Tua"));
        panel_detail_mhs.setLayout(new java.awt.GridLayout(5, 2));

        jLabel1.setText("Nama Ayah");
        panel_detail_mhs.add(jLabel1);
        panel_detail_mhs.add(lb_ldt_ayah);

        jLabel3.setText("Nama_Ibu");
        panel_detail_mhs.add(jLabel3);
        panel_detail_mhs.add(lb_ldt_ibu);

        jLabel22.setText("Telepon_Orang_Tua\t");
        panel_detail_mhs.add(jLabel22);
        panel_detail_mhs.add(lb_telp_ortu);

        jLabel24.setText("Alamat_Orang_Tua");
        panel_detail_mhs.add(jLabel24);
        panel_detail_mhs.add(lb_almt_ortu);

        jLabel26.setText("Kota Orang Tua");
        panel_detail_mhs.add(jLabel26);
        panel_detail_mhs.add(lb_kota_ortu);

        jButton2.setText("HAPUS DATA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_list_mhs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_detail_mhs, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panel_list_mhs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panel_detail_mhs, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_mhs_tabelLayout = new javax.swing.GroupLayout(panel_mhs_tabel);
        panel_mhs_tabel.setLayout(panel_mhs_tabelLayout);
        panel_mhs_tabelLayout.setHorizontalGroup(
            panel_mhs_tabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mhs_tabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_mhs_tabelLayout.setVerticalGroup(
            panel_mhs_tabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mhs_tabelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelinduk_baa.add(panel_mhs_tabel, "cv_list_mhs_baa");

        border.setBorder(javax.swing.BorderFactory.createTitledBorder("Ubah Data Dosen"));

        input_dsn.setLayout(new java.awt.GridLayout(11, 2, 0, 15));

        jLabel5_dsn.setText("NIP Dosen");
        input_dsn.add(jLabel5_dsn);

        txt_NIP_dsn_baa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_NIP_dsn_baaFocusLost(evt);
            }
        });

        cbx_nip_dsn_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH NIP ===" }));
        cbx_nip_dsn_baa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_nip_dsn_baaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelnipLayout = new javax.swing.GroupLayout(panelnip);
        panelnip.setLayout(panelnipLayout);
        panelnipLayout.setHorizontalGroup(
            panelnipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_NIP_dsn_baa)
            .addComponent(cbx_nip_dsn_baa, 0, 274, Short.MAX_VALUE)
        );
        panelnipLayout.setVerticalGroup(
            panelnipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelnipLayout.createSequentialGroup()
                .addComponent(txt_NIP_dsn_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbx_nip_dsn_baa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        input_dsn.add(panelnip);

        jLabel12_dsn.setText("NIDN");
        input_dsn.add(jLabel12_dsn);
        input_dsn.add(txt_NIDN_dsn_baa);

        jLabel6_dsn.setText("Nama Dosen");
        input_dsn.add(jLabel6_dsn);
        input_dsn.add(txt_Nama_dsn_baa);

        jLabel11_dsn.setText("Alamat");
        input_dsn.add(jLabel11_dsn);
        input_dsn.add(txt_Alamat_dsn_baa);

        jLabel21_dsn.setText("Telepon");
        input_dsn.add(jLabel21_dsn);
        input_dsn.add(txt_nohp_dsn_baa);

        jLabel1_dsn.setText("Email");
        input_dsn.add(jLabel1_dsn);
        input_dsn.add(txt_email_dsn_baa);

        jLabel9_dsn.setText("Jenis Kelamin");
        input_dsn.add(jLabel9_dsn);

        pnl_jk_dsn.setLayout(new java.awt.GridLayout(1, 0));

        grp_jk_dsn_baa.add(rd_laki_dsn_baa);
        rd_laki_dsn_baa.setText("Laki-laki");
        pnl_jk_dsn.add(rd_laki_dsn_baa);

        grp_jk_dsn_baa.add(rd_perempuan_dsn_baa);
        rd_perempuan_dsn_baa.setText("Perempuan");
        pnl_jk_dsn.add(rd_perempuan_dsn_baa);

        input_dsn.add(pnl_jk_dsn);

        jLabel2_dsn.setText("TTL");
        input_dsn.add(jLabel2_dsn);
        input_dsn.add(txt_ttl_dsn_baa);

        jLabel8_dsn.setText("Status Kepegawaian");
        input_dsn.add(jLabel8_dsn);

        cb_Status_dsn_baa.setText("Aktif");
        input_dsn.add(cb_Status_dsn_baa);

        jLabel3_dsn.setText("Pendidikan tertinggi");
        input_dsn.add(jLabel3_dsn);

        cb_pendidikan_dsn_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== Pendidikan Tertinggi ===", "> S1", "> S2", "> S3" }));
        input_dsn.add(cb_pendidikan_dsn_baa);

        jLabel7_dsn.setText("Jabatan Akademik");
        input_dsn.add(jLabel7_dsn);
        input_dsn.add(txt_jbtn_dsn_baa);

        javax.swing.GroupLayout borderLayout = new javax.swing.GroupLayout(border);
        border.setLayout(borderLayout);
        borderLayout.setHorizontalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input_dsn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        borderLayout.setVerticalGroup(
            borderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(input_dsn, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_Ubah_dsn_baa.setText("Tambah Data");
        btn_Ubah_dsn_baa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Ubah_dsn_baaActionPerformed(evt);
            }
        });

        btn_reset_dsn.setText("CLEAR");
        btn_reset_dsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reset_dsnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_dsnLayout = new javax.swing.GroupLayout(panel_dsn);
        panel_dsn.setLayout(panel_dsnLayout);
        panel_dsnLayout.setHorizontalGroup(
            panel_dsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_dsnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_dsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_dsnLayout.createSequentialGroup()
                        .addComponent(border, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_dsnLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_reset_dsn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Ubah_dsn_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        panel_dsnLayout.setVerticalGroup(
            panel_dsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_dsnLayout.createSequentialGroup()
                .addComponent(border, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_dsnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_reset_dsn)
                    .addComponent(btn_Ubah_dsn_baa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelinduk_baa.add(panel_dsn, "cv_add_dsn_baa");

        panel_dsn_tabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Dosen"));

        list_all_dsn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIP", "Email", "Nama", "Alamat", "No Hp", "Jenis Kelamin", "Status", "Jabatan Akademik"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        list_all_dsn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_all_dsnMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(list_all_dsn);
        if (list_all_dsn.getColumnModel().getColumnCount() > 0) {
            list_all_dsn.getColumnModel().getColumn(3).setHeaderValue("Alamat");
        }

        btn_hps_dsn.setText("HAPUS DOSEN");
        btn_hps_dsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hps_dsnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_hps_dsn)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_hps_dsn)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel_dsn_tabelLayout = new javax.swing.GroupLayout(panel_dsn_tabel);
        panel_dsn_tabel.setLayout(panel_dsn_tabelLayout);
        panel_dsn_tabelLayout.setHorizontalGroup(
            panel_dsn_tabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel_dsn_tabelLayout.setVerticalGroup(
            panel_dsn_tabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_dsn_tabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelinduk_baa.add(panel_dsn_tabel, "cv_list_dsn_baa");

        border3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tambah Jadwal Kelas"));

        input_jadwal.setLayout(new java.awt.GridLayout(8, 2, 0, 15));

        jLabel23.setText("Dosen Pengajar");
        input_jadwal.add(jLabel23);

        jdwl_dosen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH DOSEN ===" }));
        input_jadwal.add(jdwl_dosen);

        jLabel25.setText("Prodi");
        input_jadwal.add(jLabel25);

        cb_jdwl_prodi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "===PILIH PRODI===", "> Teknik Informatika", "> Sistem Informasi", "> Manajemen Informatika", "> DKV" }));
        cb_jdwl_prodi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_jdwl_prodiItemStateChanged(evt);
            }
        });
        input_jadwal.add(cb_jdwl_prodi);

        jLabel30.setText("Mata Kuliah");
        input_jadwal.add(jLabel30);

        cb_jdwl_matkul.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH MATA KULIAH ===" }));
        cb_jdwl_matkul.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_jdwl_matkulItemStateChanged(evt);
            }
        });
        input_jadwal.add(cb_jdwl_matkul);

        jLabel27.setText("Tanggal Mulai");
        input_jadwal.add(jLabel27);

        jdt_tgl_jdwl.setDateFormatString("yyyy-MM-dd");
        input_jadwal.add(jdt_tgl_jdwl);

        jLabel28.setText("Waktu");
        input_jadwal.add(jLabel28);

        JSpinner.DateEditor de_waktu = new JSpinner.DateEditor(sp_waktu, "HH:mm");
        sp_waktu.setEditor(de_waktu);
        input_jadwal.add(sp_waktu);

        jLabel29.setText("Jumlah Pertemuan");
        input_jadwal.add(jLabel29);

        sp_jmlh_pertemuan.setModel(new javax.swing.SpinnerNumberModel(0, 0, 15, 1));
        input_jadwal.add(sp_jmlh_pertemuan);

        jLabel31.setText("Ruang");
        input_jadwal.add(jLabel31);

        cb_jdwl_ruang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH RUANG ===", "> A1", "> A2", "> A3", "> A4", "> A5", "> B1", "> B2", "> B3", "> B4", "> B5" }));
        input_jadwal.add(cb_jdwl_ruang);

        jLabel2.setText("Kelas Gabungan");
        input_jadwal.add(jLabel2);

        Panel_Gabungan.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        ccb_ti.setText("TI");
        Panel_Gabungan.add(ccb_ti);

        ccb_dkv.setText("DKV");
        Panel_Gabungan.add(ccb_dkv);

        ccb_mi.setText("MI");
        Panel_Gabungan.add(ccb_mi);

        ccb_si.setText("SI");
        Panel_Gabungan.add(ccb_si);

        input_jadwal.add(Panel_Gabungan);

        javax.swing.GroupLayout border3Layout = new javax.swing.GroupLayout(border3);
        border3.setLayout(border3Layout);
        border3Layout.setHorizontalGroup(
            border3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(border3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input_jadwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        border3Layout.setVerticalGroup(
            border3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(border3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input_jadwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnadd_jadwal.setText("ADD");
        btnadd_jadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd_jadwalActionPerformed(evt);
            }
        });

        btn_clear_jadwal.setText("CLEAR");
        btn_clear_jadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear_jadwalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_jadwalLayout = new javax.swing.GroupLayout(panel_add_jadwal);
        panel_add_jadwal.setLayout(panel_add_jadwalLayout);
        panel_add_jadwalLayout.setHorizontalGroup(
            panel_add_jadwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_jadwalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(border3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_add_jadwalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_clear_jadwal)
                .addGap(18, 18, 18)
                .addComponent(btnadd_jadwal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        panel_add_jadwalLayout.setVerticalGroup(
            panel_add_jadwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_jadwalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(border3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_add_jadwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd_jadwal)
                    .addComponent(btn_clear_jadwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(200, 200, 200))
        );

        panelinduk_baa.add(panel_add_jadwal, "cv_add_jdwl");

        panel_list_matkul.setBorder(javax.swing.BorderFactory.createTitledBorder("List Mata Kuliah"));

        list_all_matkul.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Mata Kuliah", "Periode", "Semester", "Nama Mata Kuliah", "Prodi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(list_all_matkul);

        javax.swing.GroupLayout panel_list_matkulLayout = new javax.swing.GroupLayout(panel_list_matkul);
        panel_list_matkul.setLayout(panel_list_matkulLayout);
        panel_list_matkulLayout.setHorizontalGroup(
            panel_list_matkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 584, Short.MAX_VALUE)
            .addGroup(panel_list_matkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_list_matkulLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panel_list_matkulLayout.setVerticalGroup(
            panel_list_matkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 539, Short.MAX_VALUE)
            .addGroup(panel_list_matkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_list_matkulLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_list_matkul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(panel_list_matkul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_matkulLayout = new javax.swing.GroupLayout(panel_matkul);
        panel_matkul.setLayout(panel_matkulLayout);
        panel_matkulLayout.setHorizontalGroup(
            panel_matkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matkulLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_matkulLayout.setVerticalGroup(
            panel_matkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matkulLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelinduk_baa.add(panel_matkul, "cv_list_matkul_baa");

        TabelJadwal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Periode", "Dimulai Tanggal", "Waktu", "Nama Matkul", "Ruang", "Dosen", "Prodi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TabelJadwal);
        if (TabelJadwal.getColumnModel().getColumnCount() > 0) {
            TabelJadwal.getColumnModel().getColumn(3).setHeaderValue("Jenis Kelamin");
            TabelJadwal.getColumnModel().getColumn(6).setHeaderValue("Status");
        }

        javax.swing.GroupLayout panel_jadwalLayout = new javax.swing.GroupLayout(panel_jadwal);
        panel_jadwal.setLayout(panel_jadwalLayout);
        panel_jadwalLayout.setHorizontalGroup(
            panel_jadwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_jadwalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel_jadwalLayout.setVerticalGroup(
            panel_jadwalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_jadwalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelinduk_baa.add(panel_jadwal, "cv_jdwl_baa");

        tbl_wisuda_baa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NRP", "Nama Mahasiswa", "Prodi", "Email", "IPK"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_wisuda_baa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_wisuda_baaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_wisuda_baa);

        btn_tolak.setText("TOLAK");
        btn_tolak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tolakActionPerformed(evt);
            }
        });

        btn_terima.setText("TERIMA");
        btn_terima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_terimaActionPerformed(evt);
            }
        });

        btn_detail.setText("DETAIL");
        btn_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_detailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_wisuda_baaLayout = new javax.swing.GroupLayout(panel_wisuda_baa);
        panel_wisuda_baa.setLayout(panel_wisuda_baaLayout);
        panel_wisuda_baaLayout.setHorizontalGroup(
            panel_wisuda_baaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_wisuda_baaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_wisuda_baaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                    .addGroup(panel_wisuda_baaLayout.createSequentialGroup()
                        .addComponent(btn_detail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_terima)
                        .addGap(18, 18, 18)
                        .addComponent(btn_tolak, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_wisuda_baaLayout.setVerticalGroup(
            panel_wisuda_baaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_wisuda_baaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_wisuda_baaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_terima)
                    .addComponent(btn_tolak)
                    .addComponent(btn_detail))
                .addContainerGap())
        );

        panelinduk_baa.add(panel_wisuda_baa, "cv_wsd_baa");

        panel_add_wsd_mhs.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Wisuda"));

        jLabel50.setText("Pilih Prodi");

        cb_wsd_prodi_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PiILIH PRODI ===", "> Semua Prodi", "> Teknik Informatika", "> Manajemen Informasi", "> Sistem Informasi", "> DKV" }));
        cb_wsd_prodi_baa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_wsd_prodi_baaItemStateChanged(evt);
            }
        });

        jLabel49.setText("Pilih Mahasiswa");

        cb_wsd_mhs_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH MAHASISWA ===" }));

        jLabel45.setText("Nilai IPK");

        jLabel46.setText("Dosen Pembimbing");

        cb_wsd_dsn_pbb_baa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "=== PILIH DOSEN PEMBIMBING ===" }));

        jLabel44.setText("Judul Tugas Akhir");

        jLabel47.setText("Upload Bukti Pembayaran");

        btnFoto_wsd_baa.setText("Pilih Foto");
        btnFoto_wsd_baa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFoto_wsd_baaActionPerformed(evt);
            }
        });

        ntf_fotowsd.setText("* sumber foto");

        javax.swing.GroupLayout input_mhs_wisudaLayout = new javax.swing.GroupLayout(input_mhs_wisuda);
        input_mhs_wisuda.setLayout(input_mhs_wisudaLayout);
        input_mhs_wisudaLayout.setHorizontalGroup(
            input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(input_mhs_wisudaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, input_mhs_wisudaLayout.createSequentialGroup()
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(cb_wsd_prodi_baa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(input_mhs_wisudaLayout.createSequentialGroup()
                        .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)
                        .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFoto_wsd_baa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ipk_wsd_baa)
                            .addComponent(txt_judul_ta_baa)
                            .addComponent(cb_wsd_mhs_baa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cb_wsd_dsn_pbb_baa, 0, 288, Short.MAX_VALUE)))
                    .addGroup(input_mhs_wisudaLayout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(ntf_fotowsd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        input_mhs_wisudaLayout.setVerticalGroup(
            input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(input_mhs_wisudaLayout.createSequentialGroup()
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_wsd_prodi_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_wsd_mhs_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ipk_wsd_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_wsd_dsn_pbb_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_judul_ta_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(input_mhs_wisudaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFoto_wsd_baa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ntf_fotowsd)
                .addContainerGap())
        );

        btn_add_mhs_wisuda.setText("ADD");
        btn_add_mhs_wisuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_mhs_wisudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_wsd_mhsLayout = new javax.swing.GroupLayout(panel_add_wsd_mhs);
        panel_add_wsd_mhs.setLayout(panel_add_wsd_mhsLayout);
        panel_add_wsd_mhsLayout.setHorizontalGroup(
            panel_add_wsd_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_wsd_mhsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_add_wsd_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(input_mhs_wisuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_add_wsd_mhsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_add_mhs_wisuda, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_add_wsd_mhsLayout.setVerticalGroup(
            panel_add_wsd_mhsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_wsd_mhsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input_mhs_wisuda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_add_mhs_wisuda)
                .addContainerGap(259, Short.MAX_VALUE))
        );

        panelinduk_baa.add(panel_add_wsd_mhs, "cv_add_wsd_mhs");

        menu_mhs.setText("Mahasiswa");

        mn_mhs.setText("Data Mahasiswa");

        add_data_mhs.setText("Tambah Data Mahasiswa");
        add_data_mhs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_data_mhsActionPerformed(evt);
            }
        });
        mn_mhs.add(add_data_mhs);

        update_data_mhs.setText("Update Data Mahasiswa");
        update_data_mhs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_data_mhsActionPerformed(evt);
            }
        });
        mn_mhs.add(update_data_mhs);

        list_data_mhs.setText("List Data Mahasiswa");
        list_data_mhs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_data_mhsActionPerformed(evt);
            }
        });
        mn_mhs.add(list_data_mhs);

        menu_mhs.add(mn_mhs);

        mn_wisuda.setText("Wisuda");

        mn_tmbh_wsd.setText("Tambah Mahasiswa");
        mn_tmbh_wsd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_tmbh_wsdActionPerformed(evt);
            }
        });
        mn_wisuda.add(mn_tmbh_wsd);

        mn_peng_wis.setText("Pengajuan Wisuda");
        mn_peng_wis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_peng_wisActionPerformed(evt);
            }
        });
        mn_wisuda.add(mn_peng_wis);

        mn_list_wis_acc.setText("Sudah ACC");
        mn_list_wis_acc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mn_list_wis_accActionPerformed(evt);
            }
        });
        mn_wisuda.add(mn_list_wis_acc);

        menu_mhs.add(mn_wisuda);

        jMenuBar1.add(menu_mhs);

        menu_dosen.setText("Dosen");

        add_data_dsn.setText("Tambah Data Dosen");
        add_data_dsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_data_dsnActionPerformed(evt);
            }
        });
        menu_dosen.add(add_data_dsn);

        update_data_dsn.setText("Ubah Data Dosen");
        update_data_dsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_data_dsnActionPerformed(evt);
            }
        });
        menu_dosen.add(update_data_dsn);

        list_data_dsn.setText("List Data Dosen");
        list_data_dsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_data_dsnActionPerformed(evt);
            }
        });
        menu_dosen.add(list_data_dsn);

        jMenuBar1.add(menu_dosen);

        menu_akademik.setText("Akademik");

        add_Jadwal.setText("Tambah Jadwal");
        add_Jadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_JadwalActionPerformed(evt);
            }
        });
        menu_akademik.add(add_Jadwal);

        list_data_jadwal.setText("List Jadwal");
        list_data_jadwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_data_jadwalActionPerformed(evt);
            }
        });
        menu_akademik.add(list_data_jadwal);

        list_data_mk.setText("List Mata Kuliah");
        list_data_mk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_data_mkActionPerformed(evt);
            }
        });
        menu_akademik.add(list_data_mk);

        jMenuBar1.add(menu_akademik);

        menu_logout.setText("Logout");
        menu_logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu_logoutMouseClicked(evt);
            }
        });
        jMenuBar1.add(menu_logout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelinduk_baa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelinduk_baa, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //untuk mengganti fungsi button add/update mahasiswa
    private void btn_Ubah_dsn_baaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Ubah_dsn_baaActionPerformed
        //fungsi untuk menambah data
        if (btn_Ubah_dsn_baa.getText().equals("ADD")) {
            deklarasi_dsn();
            cek_dsn();
        }
        //fungsiuntuk mengubah data
        else if (btn_Ubah_dsn_baa.getText().equals("UBAH DATA")) {
            deklarasi_dsn();
            cek_update_dsn();
        }
    }//GEN-LAST:event_btn_Ubah_dsn_baaActionPerformed

    private void btnadd_ortu_baaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd_ortu_baaActionPerformed
        deklarasi_ortu();
        cek_ortu();
    }//GEN-LAST:event_btnadd_ortu_baaActionPerformed
    
    //untuk mengganti fungsi button add/update mahasiswa
    private void btnadd_mhs_baaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd_mhs_baaActionPerformed
        //fungsi untuk menambah data
        if (btnadd_mhs_baa.getText().equals("NEXT")) {
            deklarasi_mhs();
            cek_mhs();
        }
        //fungsiuntuk mengubah data
        else if (btnadd_mhs_baa.getText().equals("UBAH DATA")) {
            deklarasi_mhs();
            cek_update_mhs();
        }
        
        
    }//GEN-LAST:event_btnadd_mhs_baaActionPerformed
    
    //untuk menampilkan halaman tambah data mahasiswa
    private void add_data_mhsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_data_mhsActionPerformed
       clear_all();
       CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
       cl_baa.show(panelinduk_baa, "cv_add_mhs");
       title_baa.setText("Tambah Mahasiswa");
       txt_NRP_baa.setVisible(true);
       cb_NRP_baa.setVisible(false);
       btnadd_mhs_baa.setText("NEXT");
    }//GEN-LAST:event_add_data_mhsActionPerformed

    //untuk menampilkan halaman list data mahasiswa
    private void list_data_mhsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_data_mhsActionPerformed
       CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
       cl_baa.show(panelinduk_baa, "cv_list_mhs_baa");
       title_baa.setText("List Mahasiswa");
       list_mhs();
    }//GEN-LAST:event_list_data_mhsActionPerformed
    
    //untuk menampilkan halaman tambah data dosen
    private void add_data_dsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_data_dsnActionPerformed
        clear_all();
        cbx_nip_dsn_baa.setVisible(false);
        txt_NIP_dsn_baa.setVisible(true);
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_add_dsn_baa");
        title_baa.setText("Tambah data Dosen");
        btn_Ubah_dsn_baa.setText("ADD");
    }//GEN-LAST:event_add_data_dsnActionPerformed

    //untuk menampilkan halaman list data dosen
    private void list_data_dsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_data_dsnActionPerformed
       CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
       cl_baa.show(panelinduk_baa, "cv_list_dsn_baa");
       title_baa.setText("Daftar Dosen");
       list_dsn();
        
    }//GEN-LAST:event_list_data_dsnActionPerformed

    //untuk menampilkan halaman update data dosen
    private void update_data_dsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_data_dsnActionPerformed
        clear_all();
        cbx_nip_dsn_baa.setVisible(true);
        txt_NIP_dsn_baa.setVisible(false);
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_add_dsn_baa");
        title_baa.setText("Ubah data Dosen");
        btn_Ubah_dsn_baa.setText("UBAH DATA");
        txt_email_dsn_baa.setEditable(false);
        tampil_nip();
    }//GEN-LAST:event_update_data_dsnActionPerformed
    
    //untuk keluar ke halaman login
    private void menu_logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu_logoutMouseClicked
        new framelogin().setVisible(true);
        dispose();
    }//GEN-LAST:event_menu_logoutMouseClicked
    
    //untuk menampilkan halaman update data mahasiswa
    private void update_data_mhsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_data_mhsActionPerformed
       clear_all();
       CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();cl_baa.show(panelinduk_baa, "cv_add_mhs");
       cb_NRP_baa.setVisible(true);
       txt_NRP_baa.setVisible(false);
       title_baa.setText("Ubah Mahasiswa");
       btnadd_mhs_baa.setText("UBAH DATA");
       tampil_nrp();
    }//GEN-LAST:event_update_data_mhsActionPerformed

    //untuk menghapus semua isi field mahasiswa
    private void btn_clear_mhs_baaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear_mhs_baaActionPerformed
        clear_mhs();
    }//GEN-LAST:event_btn_clear_mhs_baaActionPerformed
    
    //untuk menghapus semua isi field ortu
    private void btn_clear_ortu_baaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear_ortu_baaActionPerformed
       clear_ortu();
    }//GEN-LAST:event_btn_clear_ortu_baaActionPerformed
    
    //untuk menseting email secara otomatis
    private void txt_NRP_baaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NRP_baaFocusLost
       deklarasi_mhs();
       if(nrp_mhs.equals("")){
           txt_Email_mhs_baa.setText("");
       }
       else{
          txt_Email_mhs_baa.setText(nrp_mhs+"@mhs.com"); 
       }
       
    }//GEN-LAST:event_txt_NRP_baaFocusLost
    
    //untuk kembali dari halaman ortu ke halaman mahasiswa
    private void btn_back_mhsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_back_mhsActionPerformed
       CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
       cl_baa.show(panelinduk_baa, "cv_add_mhs");
       title_baa.setText("Tambah Mahasiswa");
       txt_NRP_baa.setVisible(true);
       cb_NRP_baa.setVisible(false);
       btnadd_mhs_baa.setText("NEXT");
    }//GEN-LAST:event_btn_back_mhsActionPerformed
    
    //untuk mengisi form detail mahasiswa secara otomatis
    private void cb_NRP_baaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_NRP_baaItemStateChanged
        if (cb_NRP_baa.getSelectedIndex()>0) {
            try{
                String get_fromnrp = "SELECT * FROM mahasiswa WHERE nrp='"+cb_NRP_baa.getSelectedItem()+"'";
                ResultSet res_fromnrp = con.prepareStatement(get_fromnrp).executeQuery();
                if(res_fromnrp.next()){
                    txt_Nama_mhs_baa.setText(res_fromnrp.getString("nama_mahasiswa"));
                    txt_Email_mhs_baa.setText(res_fromnrp.getString("email"));
                    cbx_Prodi_baa.setSelectedItem("> "+res_fromnrp.getString("prodi"));
        
                    //untuk mengambil jenis kelamin
                    if(res_fromnrp.getString("Jenis_Kelamin").equals("Laki-Laki")){
                        rd_laki_mhs.setSelected(true);
                    }
                    else if(res_fromnrp.getString("Jenis_Kelamin").equals("Perempuan")){
                        rd_perempuan_mhs.setSelected(true);
                    }
                    
                    cbx_Agama_mhs_baa.setSelectedItem("> "+res_fromnrp.getString("agama"));
                    txt_ttl_mhs_baa.setText(res_fromnrp.getString("Tempat_Tanggal_Lahir_Mahasiswa"));
                    txt_Alamat_mhs_baa.setText(res_fromnrp.getString("alamat"));
                    cbx_kota_mhs_baa.setSelectedItem("> "+res_fromnrp.getString("Kota_Mahasiswa"));
                    txt_nohp_mhs_baa.setText(res_fromnrp.getString("no_hp"));
        
                    //untuk mengambil data status mahasiswa
                    if(res_fromnrp.getString("Status_Masuk").equals("Aktif")){
                        cb_Status_mhs_baa.setSelected(true);
                    }
                    else if(res_fromnrp.getString("Status_Masuk").equals("Tidak Aktif")){
                        cb_Status_mhs_baa.setSelected(false);
                    } 
                }  
            }
            catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_cb_NRP_baaItemStateChanged
    
    //untuk mengisi email dosen secara otomatis
    private void txt_NIP_dsn_baaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_NIP_dsn_baaFocusLost
        deklarasi_dsn();
        if(txt_NIP_dsn_baa.equals("")){
            txt_email_dsn_baa.setText("");
        }
        else{
           txt_email_dsn_baa.setText(NIP_dsn+"@dsn.com"); 
        }
        
    }//GEN-LAST:event_txt_NIP_dsn_baaFocusLost

    private void btn_reset_dsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reset_dsnActionPerformed
        clear_dsn();
    }//GEN-LAST:event_btn_reset_dsnActionPerformed
    
    //untuk mengisi form detail dosen secara otomatis
    private void cbx_nip_dsn_baaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_nip_dsn_baaItemStateChanged
        if (cbx_nip_dsn_baa.getSelectedIndex()>0) {
            try{
                String get_fromnip = "SELECT * FROM dosen WHERE nip_dosen='"+cbx_nip_dsn_baa.getSelectedItem()+"'";
                ResultSet res_fromnip = con.prepareStatement(get_fromnip).executeQuery();
                if(res_fromnip.next()){
                    txt_NIDN_dsn_baa.setText(res_fromnip.getString("nidn_dosen"));
                    txt_Nama_dsn_baa.setText(res_fromnip.getString("nama_dosen"));
        
                    //untuk mengambil jenis kelamin
                    if(res_fromnip.getString("Jenis_Kelamin").equals("Laki-Laki")){
                        rd_laki_dsn_baa.setSelected(true);
                    }
                    else if(res_fromnip.getString("Jenis_Kelamin").equals("Perempuan")){
                        rd_perempuan_dsn_baa.setSelected(true);
                    }
                    
                    txt_Alamat_dsn_baa.setText(res_fromnip.getString("Alamat"));
                    txt_nohp_dsn_baa.setText(res_fromnip.getString("Telepon"));
                    txt_email_dsn_baa.setText(res_fromnip.getString("Email"));
                    txt_ttl_dsn_baa.setText(res_fromnip.getString("Tempat_Tanggal_Lahir"));
                    cb_pendidikan_dsn_baa.setSelectedItem("> "+res_fromnip.getString("Pendidikan_Tertinggi"));
                    txt_jbtn_dsn_baa.setText(res_fromnip.getString("Jabatan_Akademik"));
                            
        
                    //untuk mengambil data status dosen
                    if(res_fromnip.getString("Status_Kepegawaian").equals("Aktif")){
                        cb_Status_dsn_baa.setSelected(true);
                    }
                    else if(res_fromnip.getString("Status_Kepegawaian").equals("Tidak Aktif")){
                        cb_Status_dsn_baa.setSelected(false);
                    } 
                }  
            }
            catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_cbx_nip_dsn_baaItemStateChanged
    
    //untuk menghapus data mahasiswa
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       ambil_ortu();
        try{
            System.out.println("delete"+get_email_mhs);
            //untuk menghapus data pada mahasiswa
            String sql_del_mhs = "DELETE FROM mahasiswa WHERE Email ='"+get_email_mhs+"'";
            PreparedStatement ps_del_mhs = con.prepareStatement(sql_del_mhs);
            ps_del_mhs.executeUpdate();
            
            //untuk menghapus data pada user
            String sql_del_usr_mhs = "DELETE FROM user WHERE Email ='"+get_email_mhs+"'";
            PreparedStatement ps_del_usr_mhs = con.prepareStatement(sql_del_usr_mhs);
            ps_del_usr_mhs.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data telah terhapus");
            list_mhs();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    //untuk menampilkan detail ortu
    private void list_all_mahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_all_mahasiswaMouseClicked
       ambil_ortu();
    }//GEN-LAST:event_list_all_mahasiswaMouseClicked

    //untuk menghapus data dsn
    private void btn_hps_dsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hps_dsnActionPerformed
        try{
            //untuk menghapus data jadwal dosen
            String sql_del_jdwl_dsn = "DELETE FROM jadwal WHERE nip_dosen ='"+get_nip_dsn+"'";
            PreparedStatement ps_del_jdwl_dsn = con.prepareStatement(sql_del_jdwl_dsn);
            ps_del_jdwl_dsn.executeUpdate();
            
            //untuk menghapus data pada dsn
            String sql_del_dsn = "DELETE FROM dosen WHERE Email ='"+get_email_dsn+"'";
            PreparedStatement ps_del_dsn = con.prepareStatement(sql_del_dsn);
            ps_del_dsn.executeUpdate();
            
            //untuk menghapus data pada dosen
            String sql_del_usr_dsn = "DELETE FROM user WHERE Email ='"+get_email_dsn+"'";
            PreparedStatement ps_del_usr_mhs = con.prepareStatement(sql_del_usr_dsn);
            ps_del_usr_mhs.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data telah terhapus");
            list_dsn();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btn_hps_dsnActionPerformed
    
    //untuk mengambil data dsn dari tabel
    private void list_all_dsnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_all_dsnMouseClicked
        int ambil_row_dsn = list_all_dsn.getSelectedRow();
        DefaultTableModel tb_list_dsn = (DefaultTableModel) list_all_dsn.getModel();
        get_nip_dsn = tb_list_dsn.getValueAt(ambil_row_dsn, 0).toString();
        get_email_dsn = tb_list_dsn.getValueAt(ambil_row_dsn, 1).toString();
    }//GEN-LAST:event_list_all_dsnMouseClicked
    
    //untuk menampilkan halaman tambah jadwal
    private void add_JadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_JadwalActionPerformed
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_add_jdwl");
        title_baa.setText("Tambah Jadwal");
        reset_waktu();
        tampil_dsn();
        clear_jadwal();
    }//GEN-LAST:event_add_JadwalActionPerformed
    
    //untuk menampilkan halaman list matakuliah
    private void list_data_mkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_data_mkActionPerformed
        tampil_matkul();
    }//GEN-LAST:event_list_data_mkActionPerformed

    //untuk menampilkan halaman list jadwal
    private void list_data_jadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_data_jadwalActionPerformed
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_jdwl_baa");
        title_baa.setText("List Jadwal");
        list_jadwal();
    }//GEN-LAST:event_list_data_jadwalActionPerformed
    
    //untuk menambahkan jadwal
    private void btnadd_jadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd_jadwalActionPerformed
        cek_add_jadwal();
        getdata_jadwal_db();
    }//GEN-LAST:event_btnadd_jadwalActionPerformed

    private void btn_clear_jadwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear_jadwalActionPerformed
        clear_jadwal();
    }//GEN-LAST:event_btn_clear_jadwalActionPerformed
    
    //untuk menampilkan filter mata kuliah secara otomatis
    private void cb_jdwl_prodiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_jdwl_prodiItemStateChanged
        int id_jdwl_prodi = cb_jdwl_prodi.getSelectedIndex();
        if(id_jdwl_prodi == 1){
           prodi_mk = "TI"; 
        }
        else if(id_jdwl_prodi == 2){
           prodi_mk = "SI"; 
        }
        else if(id_jdwl_prodi == 3){
           prodi_mk = "MI"; 
        }
        else if(id_jdwl_prodi == 4){
           prodi_mk = "DK"; 
        }
        get_mtkl();
    }//GEN-LAST:event_cb_jdwl_prodiItemStateChanged

    //untuk menselect prodi gabungan
    private void cb_jdwl_matkulItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_jdwl_matkulItemStateChanged
        ccb_ti.setSelected(false);
        ccb_si.setSelected(false);
        ccb_mi.setSelected(false);
        ccb_dkv.setSelected(false);
        
        deklarasi_jadwal();
        try{
            String get_id_matkul = "SELECT * FROM mata_kuliah WHERE nama_mata_kuliah='"+mtkl_jdwl+"'";
            ResultSet res_id_matkul = con.prepareStatement(get_id_matkul).executeQuery();
            while(res_id_matkul.next()){
                String gabungan = res_id_matkul.getString("kode_mata_kuliah");
                if(gabungan.startsWith("TI")){
                    ccb_ti.setSelected(true);
                }
                if(gabungan.startsWith("SI")){
                   ccb_si.setSelected(true);
                }
                if(gabungan.startsWith("MI")){
                   ccb_mi.setSelected(true);
                }
                if(gabungan.startsWith("DK")){
                   ccb_dkv.setSelected(true);
                }
            }      
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_cb_jdwl_matkulItemStateChanged
    
    //list mahasiswa yang sudah di acc
    private void mn_list_wis_accActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mn_list_wis_accActionPerformed
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_wsd_baa");
        title_baa.setText("List Wisuda Mahasiswa");
        list_jadwal();
        
        btn_terima.setVisible(false);
        btn_tolak.setVisible(false);
        sudah_acc_wsd();
    }//GEN-LAST:event_mn_list_wis_accActionPerformed
    
    //list mahasiswa yang mengajukan wisuda
    private void mn_peng_wisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mn_peng_wisActionPerformed
        nrp_list_wsd = "hmmh";
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_wsd_baa");
        title_baa.setText("List Permohonan");
        list_jadwal();
        
        btn_terima.setVisible(true);
        btn_tolak.setVisible(true);
        proses_wsd();
    }//GEN-LAST:event_mn_peng_wisActionPerformed
    
    //jika mahasiswa di tolak untuk wisuda
    private void btn_tolakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tolakActionPerformed
        if(nrp_list_wsd.equals("hmmh")){
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Mahasiswa");
        }
        
        else{    
            String keterangan = JOptionPane.showInputDialog(this, "Mohon Masukkan Alasan Penolakan");
            try{
                String update_acc = "UPDATE wisuda SET Status ='Tolak',"+ 
                                    "Keterangan ='"+keterangan+"'"+
                                    "WHERE nrp ='"+nrp_list_wsd+"'";
                con.prepareStatement(update_acc).executeUpdate();
                JOptionPane.showMessageDialog(this, "Pengajuan wisuda Mahasiswa dengan NRP " +nrp_list_wsd+ " telah ditolak \n"
                        + "Alasan Penolakan "+keterangan);
                proses_wsd();
                nrp_list_wsd = "hmmh";
            }
            catch(Exception e){
                System.out.println(e.getMessage());
            }
        } 
    }//GEN-LAST:event_btn_tolakActionPerformed
    
    //fungsi dari button teracc wisuda
    private void btn_terimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_terimaActionPerformed
        if(nrp_list_wsd.equals("hmmh")){
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Mahasiswa");
        }
        
        else{
            int opsi_terima = JOptionPane.showConfirmDialog(this, "Apakah Anda Yakin", "", JOptionPane.YES_NO_OPTION);
            if(opsi_terima == JOptionPane.YES_OPTION){
                try{
                    String update_acc = "UPDATE wisuda SET Status ='ACC',keterangan='Sudah ACC'"+
                                        "WHERE nrp ='"+nrp_list_wsd+"'";
                    con.prepareStatement(update_acc).executeUpdate();
                    JOptionPane.showMessageDialog(this, "Mahasiswa dengan NRP " +nrp_list_wsd+ " bisa ikut wisuda");
                    proses_wsd();
                    nrp_list_wsd = "hmmh";
                }
                catch(Exception e){
                    System.out.println(e.getMessage());
                }

            } 
        }  
    }//GEN-LAST:event_btn_terimaActionPerformed
    
    //untuk mengambil nrp setelah data pada tabel di klik
    private void tbl_wisuda_baaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_wisuda_baaMouseClicked
        int getrow = tbl_wisuda_baa.getSelectedRow();
        DefaultTableModel df_wisuda_baa = (DefaultTableModel) tbl_wisuda_baa.getModel();
        nrp_list_wsd = df_wisuda_baa.getValueAt(getrow, 0).toString();
    }//GEN-LAST:event_tbl_wisuda_baaMouseClicked
    
    
    //untuk menampilkan detail data wisuda mahasiswa
    private void btn_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_detailActionPerformed
       if(nrp_list_wsd.equals("hmmh")){
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Mahasiswa");
        }
        
        else{
           new Detail_wisuda().show();
       }
    }//GEN-LAST:event_btn_detailActionPerformed

    //untuk menampilkan halaman tambah data mahasiswa wisuda
    private void mn_tmbh_wsdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mn_tmbh_wsdActionPerformed
       CardLayout cl_tmbh_wsd = (CardLayout) panelinduk_baa.getLayout();
       cl_tmbh_wsd.show(panelinduk_baa, "cv_add_wsd_mhs");
       title_baa.setText("Registrasi Wisuda Mahasiswa");
       clear_all();
       prodi_wsd ="ara";
       nrp_wsd ="ara"; 
       nip_wsd="ara";
       tampildb_dsn_wsd();
    }//GEN-LAST:event_mn_tmbh_wsdActionPerformed
    
    //button untuk menambahkan foto
    private void btnFoto_wsd_baaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFoto_wsd_baaActionPerformed
        insert_bukti_pem();
    }//GEN-LAST:event_btnFoto_wsd_baaActionPerformed
    
    //untuk menambahkan data mahasiswa wisuda
    private void btn_add_mhs_wisudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_mhs_wisudaActionPerformed
       cek_wsd();
       
    }//GEN-LAST:event_btn_add_mhs_wisudaActionPerformed
    
    //untuk menggganti list mahasiswa secara otomatis jika Prodi diubah
    private void cb_wsd_prodi_baaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_wsd_prodi_baaItemStateChanged
        prodi_wsd ="ara";
        
        if(cb_wsd_prodi_baa.getSelectedIndex() == 1){
            prodi_wsd ="";
        }
        else if(cb_wsd_prodi_baa.getSelectedIndex() == 2){
            prodi_wsd ="Teknik Informatika";
        }
        else if(cb_wsd_prodi_baa.getSelectedIndex() == 3){
            prodi_wsd ="Manajemen Informasi";
        }
        else if(cb_wsd_prodi_baa.getSelectedIndex() == 4){
            prodi_wsd ="Sistem Informasi";
        }
        else if(cb_wsd_prodi_baa.getSelectedIndex() == 5){
            prodi_wsd ="DKV";
        }
        tampil_db_mhs_wsd();
    }//GEN-LAST:event_cb_wsd_prodi_baaItemStateChanged
    
    //untuk menampilkan kota
    private void tampilkota(){
        try{
           String db_tmplkota = "SELECT * FROM kota ORDER BY Kota";
            PreparedStatement  ps_tmpl_kota = con.prepareStatement(db_tmplkota);
            ResultSet rs_tmplkota = ps_tmpl_kota.executeQuery();

            while(rs_tmplkota.next()){
                cbx_kota_mhs_baa.addItem("> "+rs_tmplkota.getString("Kota"));
                cb_kota_ortu_baa.addItem("> "+rs_tmplkota.getString("Kota"));
            } 
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }
    
// MAHASISWA
    
    //menghapus semua field
    private void clear_all(){
        clear_mhs();
        clear_ortu();
        clear_dsn();
        clear_wsd();
    }
    
    //menghapus field mahasiswa
    private void clear_mhs(){
        cb_NRP_baa.setSelectedIndex(0);
        txt_NRP_baa.setText("");
        txt_Email_mhs_baa.setText("");
        txt_Nama_mhs_baa.setText("");
        cbx_Prodi_baa.setSelectedIndex(0);
        grp_jk_mhs_baa.clearSelection();
        cbx_Agama_mhs_baa.setSelectedIndex(0);
        txt_ttl_mhs_baa.setText("");
        txt_Alamat_mhs_baa.setText("");
        cbx_kota_mhs_baa.setSelectedIndex(0);
        txt_nohp_mhs_baa.setText("");
        cb_Status_mhs_baa.setSelected(false);
    }
    
    //deklarasi mahasiswa
    private void deklarasi_mhs(){
        indx_kota_mhs = cbx_kota_mhs_baa.getSelectedIndex();
        tampilkota();
        nrp_mhs = txt_NRP_baa.getText();
        email_mhs = txt_Email_mhs_baa.getText();
        nama_mhs = txt_Nama_mhs_baa.getText();
        prodi_mhs = hapus_tanda(cbx_Prodi_baa.getSelectedItem().toString());
        
        //untuk mengambil jenis kelamin
        if(rd_laki_mhs.isSelected()){
            jk_mhs = "Laki-Laki";
        }
        else if(rd_perempuan_mhs.isSelected()){
            jk_mhs = "Perempuan";
        }
        
        agama_mhs = hapus_tanda(cbx_Agama_mhs_baa.getSelectedItem().toString());
        ttl_mhs = txt_ttl_mhs_baa.getText();
        almt_mhs = txt_Alamat_mhs_baa.getText();
        kota_mhs = hapus_tanda(cbx_kota_mhs_baa.getItemAt(indx_kota_mhs));
        hp_mhs = txt_nohp_mhs_baa.getText();
                
        //untuk mengambil data status mahasiswa
        if(cb_Status_mhs_baa.isSelected() == true){
            stts_mhs = "Aktif";
        }
        else if(cb_Status_mhs_baa.isSelected() == false){
            stts_mhs = "Tidak Aktif";
        }
    }
    
    //untuk mengecek field mahasiswa, apakah ada field yang kosong
    private void cek_mhs(){
        try{
            String cek_nrp = "SELECT * FROM mahasiswa WHERE nrp='"+nrp_mhs+"'";
            ResultSet rs_cek_nrp = con.prepareStatement(cek_nrp).executeQuery();
            if(rs_cek_nrp.next()){
                JOptionPane.showMessageDialog(this, "Data dengan NRP "+nrp_mhs+" sudah ada");
            }
            else{
                String cek_email_mhs = "SELECT * FROM user WHERE Email='"+email_mhs+"'";
                ResultSet rs_cek_email_mhs = con.prepareStatement(cek_email_mhs).executeQuery();
                if(rs_cek_email_mhs.next()){
                 JOptionPane.showMessageDialog(this, "Data dengan Email "+email_mhs+" sudah ada");
                }
                else{
                    //jika ada field yang kosong
                    if(nrp_mhs.length() != 9 || nrp_mhs.equals("") || !nrp_mhs.matches("[0-9]*") ||email_mhs.equals("") || nama_mhs.equals("") || 
                        cbx_Prodi_baa.getSelectedIndex() == 0|| grp_jk_mhs_baa.getSelection() == null || 
                        cbx_Agama_mhs_baa.getSelectedIndex() == 0 || ttl_mhs.equals("") || almt_mhs.equals("") ||
                        cbx_kota_mhs_baa.getSelectedIndex() == 0  || hp_mhs.equals("") || !hp_mhs.matches("[0-9]*")){
                        
                        if(nrp_mhs.equals("") || email_mhs.equals("") || nama_mhs.equals("") || 
                                ttl_mhs.equals("") || almt_mhs.equals("") || hp_mhs.equals("")){
                                JOptionPane.showMessageDialog(this, "Mohon isi semua Field");
                        }
                        else if(!nrp_mhs.matches("[0-9]*") ){
                            JOptionPane.showMessageDialog(this, "Mohon isikan NRP dengan hanya menggunakan angka");  
                        }
                        else if(grp_jk_mhs_baa.getSelection() == null){
                             JOptionPane.showMessageDialog(this, "Mohon Pilih Jenis Kelamin Mahasiswa");       
                        }
                        else if(cbx_Prodi_baa.getSelectedIndex() == 0){
                             JOptionPane.showMessageDialog(this, "Mohon Pilih prodi Mahasiswa");       
                        }
                        else if(cbx_Agama_mhs_baa.getSelectedIndex() == 0 ){
                             JOptionPane.showMessageDialog(this, "Mohon Pilih Agama Mahasiswa");       
                        }
                        else if(cbx_kota_mhs_baa.getSelectedIndex() == 0 ){
                             JOptionPane.showMessageDialog(this, "Mohon Pilih kota Mahasiswa");       
                        }
                        else if(!hp_mhs.matches("[0-9]*")){
                             JOptionPane.showMessageDialog(this, "Mohon isikan No HP hanya menggunakan angka");       
                        }
                        else if(nrp_mhs.length() != 9 ){
                            JOptionPane.showMessageDialog(this, "Mohon isikan NIP 10 digit angka"); 
                        }
                    }
                            
                    //jika data belum terdaftar
                    else{
                        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
                        cl_baa.show(panelinduk_baa, "cv_add_ortu_baa");
                        title_baa.setText("Tambah Mahasiswa");
                    }
                }
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
            
    }
    
    //untuk mendapatkan list nrp
    private void tampil_nrp(){
        cb_NRP_baa.removeAllItems();
        cb_NRP_baa.addItem("=== PILIH NRP ===");
        try{
            String con_get_nrp = "SELECT * from mahasiswa \n"+
                                "ORDER BY NRP ASC";
            ResultSet res_get_nrp = con.prepareStatement(con_get_nrp).executeQuery();
            while(res_get_nrp.next()){
                cb_NRP_baa.addItem(res_get_nrp.getString("nrp"));
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk menampilkan data mahasiswa
    private void list_mhs(){
        //untuk menampilkan list mahasiswa
       try{
            String output = "SELECT * FROM mahasiswa";
            PreparedStatement ps_mhs_list = con.prepareStatement(output);
            ResultSet res_mhs_list= ps_mhs_list.executeQuery();
            
            DefaultTableModel tb_list_mhs = (DefaultTableModel) list_all_mahasiswa.getModel();
            
            tb_list_mhs.setRowCount(0);
            
            while(res_mhs_list.next()){
                Object data[] = new Object[8];
                data[0] = res_mhs_list.getString("nrp");
                data[1] = res_mhs_list.getString("nama_mahasiswa");
                data[2] = res_mhs_list.getString("email");
                data[3] = res_mhs_list.getString("prodi");
                data[4] = res_mhs_list.getString("alamat");
                data[5] = res_mhs_list.getString("Jenis_Kelamin");
                data[6] = res_mhs_list.getString("no_hp");
                data[7] = res_mhs_list.getString("Status_Masuk");
                
                tb_list_mhs.addRow(data);
                
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk menampilkan data orang tua
    private void ambil_ortu(){
        try{
            int ambil_row = list_all_mahasiswa.getSelectedRow();
            DefaultTableModel tablemodel = (DefaultTableModel) list_all_mahasiswa.getModel();
            get_email_mhs = tablemodel.getValueAt(ambil_row, 2).toString();

            String ambil_data_mhs = "SELECT * FROM mahasiswa WHERE email='"+get_email_mhs+"'";
            PreparedStatement ps_ambil_data_mhs = con.prepareStatement(ambil_data_mhs);
            ResultSet res_ambil_data_mhs = ps_ambil_data_mhs.executeQuery();
            
            if(res_ambil_data_mhs.next()){
                lb_ldt_ayah.setText(res_ambil_data_mhs.getString("Nama_Ayah"));
                lb_ldt_ibu.setText(res_ambil_data_mhs.getString("Nama_Ibu"));
                lb_telp_ortu.setText(res_ambil_data_mhs.getString("Telepon_Orang_Tua"));
                lb_almt_ortu.setText(res_ambil_data_mhs.getString("Alamat_Orang_Tua"));
                lb_kota_ortu.setText(res_ambil_data_mhs.getString("Kota_Orang_Tua"));
            } 
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
// ORANG TUA
    
    //menghapus field orang tua
    private void clear_ortu(){
        txtnm_ayah_baa.setText("");
        txtktp_ayah_baa.setText("");
        txtnm_ibu_baa.setText("");
        txtktp_ibu_baa.setText("");
        cb_kota_ortu_baa.setSelectedIndex(0);
        txt_telp_ortu_baa.setText("");
    }
    
    //deklarasi ortu
    private void deklarasi_ortu(){
        indx_kota_ortu_mhs = cb_kota_ortu_baa.getSelectedIndex();
        tampilkota();
        nama_ayah_mhs = txtnm_ayah_baa.getText();
        ktp_ayah_mhs = txtktp_ayah_baa.getText();
        nama_ibu_mhs = txtnm_ibu_baa.getText();
        ktp_ibu_mhs = txtktp_ibu_baa.getText();
        alamat_ortu_mhs = txt_alamatortu_baa.getText();
        kota_ortu_mhs = hapus_tanda(cb_kota_ortu_baa.getItemAt(indx_kota_ortu_mhs));
        hp_ortu_mhs= txt_telp_ortu_baa.getText();
    }
    
    //untuk mengecek field ortu, apakah ada field yang kosong
    private void cek_ortu(){
        //jika ada field yang kosong
        if(nama_ayah_mhs.equals("") || ktp_ayah_mhs.equals("") || nama_ibu_mhs.equals("") ||
                ktp_ibu_mhs.equals("") || alamat_ortu_mhs.equals("") || cb_kota_ortu_baa.getSelectedIndex() == 0  ||
                hp_ortu_mhs.equals("") || !hp_ortu_mhs.matches("[0-9]*")){
            JOptionPane.showMessageDialog(this, "Mohon cek Field Anda");
        }
        
        //jika tidak ada field yang kosong
        else{
            add_mhs();
        }
    }
    
    //untuk menambahkan data mahasiswa
    private void add_mhs(){
        try{
            String cek_add_user_mhs_2 = "SELECT * FROM mahasiswa WHERE nrp ='"+nrp_mhs+"'";
            ResultSet res_cek_add_user_mhs_2 = con.prepareStatement(cek_add_user_mhs_2).executeQuery();
            if(res_cek_add_user_mhs_2.next()){
                JOptionPane.showMessageDialog(this, "Data sudah Ditambahkan");
            }
            else{
                //untuk membuat user
                String add_user_mhs = "INSERT INTO user(Email,Password, Jenis_User) VALUES (?,?,?)";
                PreparedStatement ps_add_user_mhs = con.prepareStatement(add_user_mhs);
                ps_add_user_mhs.setString(1, email_mhs);
                ps_add_user_mhs.setString(2, "pass"+nrp_mhs);
                ps_add_user_mhs.setString(3, "Mahasiswa");
                ps_add_user_mhs.executeUpdate();

                //untuk menyimpan data mahasiswa
                String add_mhs = "INSERT INTO mahasiswa(nrp, nama_mahasiswa, prodi, Status_Masuk, "
                + "Jenis_Kelamin, Agama, alamat, Tempat_Tanggal_Lahir_Mahasiswa, Kota_Mahasiswa, "
                + "email, no_hp, Nama_Ayah, Nomor_KTP_Ayah, Nama_Ibu, Nomor_KTP_Ibu, Telepon_Orang_Tua, "
                + "Alamat_Orang_Tua, Kota_Orang_Tua) VALUES ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

                PreparedStatement ps_add_mhs = con.prepareStatement(add_mhs);
                ps_add_mhs.setString(1, nrp_mhs);
                ps_add_mhs.setString(2, nama_mhs);
                ps_add_mhs.setString(3, prodi_mhs);
                ps_add_mhs.setString(4, stts_mhs);
                ps_add_mhs.setString(5, jk_mhs);
                ps_add_mhs.setString(6, agama_mhs);
                ps_add_mhs.setString(7, almt_mhs);
                ps_add_mhs.setString(8, ttl_mhs);
                ps_add_mhs.setString(9, kota_mhs);
                ps_add_mhs.setString(10, email_mhs);
                ps_add_mhs.setString(11, hp_mhs);
                ps_add_mhs.setString(12, nama_ayah_mhs);
                ps_add_mhs.setString(13, ktp_ayah_mhs);
                ps_add_mhs.setString(14, nama_ibu_mhs);
                ps_add_mhs.setString(15, ktp_ibu_mhs);
                ps_add_mhs.setString(16, hp_ortu_mhs);
                ps_add_mhs.setString(17, alamat_ortu_mhs);
                ps_add_mhs.setString(18, kota_ortu_mhs);
                ps_add_mhs.executeUpdate();

                JOptionPane.showMessageDialog(this,"Data dengan NRP "+nrp_mhs+" berhasil ditambahkan"); 
            }
            
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //cek field pada update mahasiswa
    private void cek_update_mhs(){
        if(cb_NRP_baa.getSelectedIndex() == 0 ||nama_mhs.equals("") || grp_jk_mhs_baa.getSelection() == null || 
            cbx_Agama_mhs_baa.getSelectedIndex() == 0 || ttl_mhs.equals("") || almt_mhs.equals("") ||
            cbx_kota_mhs_baa.getSelectedIndex() == 0  || hp_mhs.equals("") || !hp_mhs.matches("[0-9]*")){
            
            if(cb_NRP_baa.getSelectedIndex() == 0){
               JOptionPane.showMessageDialog(this, "Mohon Pilih Data Mahasiswa yang akan diubah");   
            }           
            else if(nama_mhs.equals("") || ttl_mhs.equals("") || almt_mhs.equals("") || hp_mhs.equals("")){
                JOptionPane.showMessageDialog(this, "Mohon isi semua Field");
            }
            
            else if(grp_jk_mhs_baa.getSelection() == null){
                JOptionPane.showMessageDialog(this, "Mohon Pilih Jenis Kelamin Mahasiswa");       
            }
            else if(cbx_Agama_mhs_baa.getSelectedIndex() == 0 ){
                JOptionPane.showMessageDialog(this, "Mohon Pilih Agama Mahasiswa");       
            }
            else if(cbx_kota_mhs_baa.getSelectedIndex() == 0 ){
                JOptionPane.showMessageDialog(this, "Mohon Pilih kota Mahasiswa");       
            }
            else if(!hp_mhs.matches("[0-9]*")){
                JOptionPane.showMessageDialog(this, "Mohon isikan No HP hanya menggunakan angka");       
            }
        }
        else{
            update_mhs();
        }
    }
    
    //untuk mengganti data mahasiswa
    private void update_mhs(){
        deklarasi_mhs();
        try{
            String db_update_mhs = "UPDATE mahasiswa SET nama_mahasiswa = ? ,"
                    + "Jenis_Kelamin = ? ,Agama = ? ,Tempat_Tanggal_Lahir_Mahasiswa = ? ,"
                    + "alamat = ? ,Kota_Mahasiswa = ? ,no_hp = ? ,Status_Masuk = ? "
                    + "WHERE nrp='"+cb_NRP_baa.getSelectedItem()+"'";
            PreparedStatement ps_up_mhs = con.prepareStatement(db_update_mhs);
            ps_up_mhs.setString(1, nama_mhs);
            ps_up_mhs.setString(2, jk_mhs);
            ps_up_mhs.setString(3, agama_mhs);
            ps_up_mhs.setString(4, ttl_mhs);
            ps_up_mhs.setString(5, almt_mhs);
            ps_up_mhs.setString(6, kota_mhs);
            ps_up_mhs.setString(7, hp_mhs);
            ps_up_mhs.setString(8, stts_mhs);
            ps_up_mhs.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data pada NRP "+cb_NRP_baa.getSelectedItem()+"telah berhasil diubah");
            
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }
    
    
//DOSEN
    //menghapus field dosen
    private void clear_dsn(){
        cbx_nip_dsn_baa.setSelectedIndex(0);
        txt_NIP_dsn_baa.setText("");
        txt_NIDN_dsn_baa.setText("");
        txt_Nama_dsn_baa.setText("");
        txt_Alamat_dsn_baa.setText("");
        txt_nohp_dsn_baa.setText("");
        txt_email_dsn_baa.setText("");
        txt_ttl_dsn_baa.setText("");
        txt_jbtn_dsn_baa.setText("");
        cb_Status_dsn_baa.setSelected(false);
        cb_pendidikan_dsn_baa.setSelectedIndex(0);
        grp_jk_dsn_baa.clearSelection();
    }
    
     //deklarasi dosen
    private void deklarasi_dsn(){
        NIP_dsn = txt_NIP_dsn_baa.getText();
        NIDN_dsn = txt_NIDN_dsn_baa.getText();
        Nama_dsn = txt_Nama_dsn_baa.getText();
        Alamat_dsn = txt_Alamat_dsn_baa.getText(); 
        Telepon_dsn = txt_nohp_dsn_baa.getText();
        
        //untuk mengambil jenis kelamin
        if(rd_laki_dsn_baa.isSelected()){
            jk_dsn = "Laki-Laki";
        }
        else if(rd_perempuan_dsn_baa.isSelected()){
            jk_dsn = "Perempuan";
        }
        
        Email_dsn = txt_email_dsn_baa.getText();
        ttldsn = txt_ttl_dsn_baa.getText();
        ptn_dsn = hapus_tanda(cb_pendidikan_dsn_baa.getSelectedItem().toString());
        ja_dsn = txt_jbtn_dsn_baa.getText();
        
                
        //untuk mengambil data status dosen
        if(cb_Status_dsn_baa.isSelected() == true){
            stts_dsn = "Aktif";
        }
        else if(cb_Status_dsn_baa.isSelected() == false){
            stts_dsn = "Tidak Aktif";
        }
    }
    
    //untuk mengecek field dosen, 
    private void cek_dsn(){
        try{
            String cek_nip = "SELECT * FROM dosen WHERE nip_dosen='"+NIP_dsn+"'";
            ResultSet rs_cek_nip = con.prepareStatement(cek_nip).executeQuery();
            if(rs_cek_nip.next()){
                JOptionPane.showMessageDialog(this, "Data dengan NIP "+NIP_dsn+" sudah ada");
            }
            else{
                String cek_email_dsn = "SELECT * FROM dosen WHERE Email='"+Email_dsn+"'";
                ResultSet rs_cek_email_dsn = con.prepareStatement(cek_email_dsn).executeQuery();
                if(rs_cek_email_dsn.next()){
                     JOptionPane.showMessageDialog(this, "Data dengan Email "+Email_dsn+" sudah ada");
                }
                else{
                    //jika ada field yang kosong
                    if(NIP_dsn.length() != 10 || NIP_dsn.equals("") || NIDN_dsn.equals("") || Nama_dsn.equals("") || 
                        Alamat_dsn.equals("") || Telepon_dsn.equals("") || !Telepon_dsn.matches("[0-9]*") ||
                        Email_dsn.equals("") ||ttldsn.equals("") || ja_dsn.equals("")||
                        cb_pendidikan_dsn_baa.getSelectedIndex() == 0  || grp_jk_dsn_baa.getSelection() == null ||
                        !NIP_dsn.matches("[0-9]*") || !NIDN_dsn.matches("[0-9]*") ){
                        
                        if(NIP_dsn.equals("") || NIDN_dsn.equals("") || Nama_dsn.equals("") || 
                            Alamat_dsn.equals("") || Telepon_dsn.equals("") ||
                            Email_dsn.equals("") ||ttldsn.equals("") || ja_dsn.equals("")){
                                JOptionPane.showMessageDialog(this, "Mohon isi semua Field");
                        }
                        else if(!NIP_dsn.matches("[0-9]*")){
                            JOptionPane.showMessageDialog(this, "Mohon isikan NIP hanya dengan menggunakan angka");
                        }
                        else if(!NIDN_dsn.matches("[0-9]*")){
                            JOptionPane.showMessageDialog(this, "Mohon isikan NIDN hanya dengan menggunakan angka");
                        }
                        else if(!Telepon_dsn.matches("[0-9]*")){
                             JOptionPane.showMessageDialog(this, "Mohon isikan No HP hanya dengan menggunakan angka");       
                        }
                        else if(cb_pendidikan_dsn_baa.getSelectedIndex() == 0){
                             JOptionPane.showMessageDialog(this, "Mohon Pilih Pendidikan Tertinggi Dosen");       
                        }
                        else if(grp_jk_dsn_baa.getSelection() == null ){
                             JOptionPane.showMessageDialog(this, "Mohon Pilih Jenis Kelamin");       
                        }
                        else if(NIP_dsn.length() != 10 ){
                            JOptionPane.showMessageDialog(this, "Mohon isikan NIP 10 digit angka"); 
                        }
                        
                    }
                            
                    //jika data belum terdaftar
                    else{
                        add_dsn();
                    }
                }
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
            
    }
    
    //untuk menambahkan data dosen
    private void add_dsn(){
        try{
            //untuk membuat user
            String add_user_dsn = "INSERT INTO user(Email,Password, Jenis_User) VALUES (?,?,?)";
            PreparedStatement ps_add_user_dsn = con.prepareStatement(add_user_dsn);
            ps_add_user_dsn.setString(1, Email_dsn);
            ps_add_user_dsn.setString(2, "pass"+NIP_dsn);
            ps_add_user_dsn.setString(3, "Dosen");
            ps_add_user_dsn.executeUpdate();
            
            //untuk menyimpan data mahasiswa
            String add_dsn = "INSERT INTO dosen(nip_dosen, nidn_dosen, nama_dosen, Alamat, "
            + "Telepon, Email, Jenis_Kelamin, Tempat_Tanggal_Lahir, Status_Kepegawaian, "
            + "Pendidikan_Tertinggi, Jabatan_Akademik) VALUES ( ?,?,?,?,?,?,?,?,?,?,?)";
        
            PreparedStatement ps_add_dsn = con.prepareStatement(add_dsn);
            ps_add_dsn.setString(1, NIP_dsn);
            ps_add_dsn.setString(2, NIDN_dsn);
            ps_add_dsn.setString(3, Nama_dsn);
            ps_add_dsn.setString(4, Alamat_dsn);
            ps_add_dsn.setString(5, Telepon_dsn);
            ps_add_dsn.setString(6, Email_dsn);
            ps_add_dsn.setString(7, jk_dsn);
            ps_add_dsn.setString(8, ttldsn);
            ps_add_dsn.setString(9, stts_dsn);
            ps_add_dsn.setString(10, ptn_dsn);
            ps_add_dsn.setString(11, ja_dsn);
            ps_add_dsn.executeUpdate();
            
           JOptionPane.showMessageDialog(this, "Selamat Data dengan NIP "+NIP_dsn+" berhasil ditambahkan");;
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk mendapatkan list nip
    private void tampil_nip(){
        cbx_nip_dsn_baa.removeAllItems();
        cbx_nip_dsn_baa.addItem("=== PILIH NIP ===");
        try{
            String con_get_nip = "SELECT * from dosen";
            ResultSet res_get_nip = con.prepareStatement(con_get_nip).executeQuery();
            while(res_get_nip.next()){
                cbx_nip_dsn_baa.addItem(res_get_nip.getString("nip_dosen"));
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //cek field pada update dosen
    private void cek_update_dsn(){
        if(cbx_nip_dsn_baa.getSelectedIndex() == 0 ||NIDN_dsn.equals("") || Nama_dsn.equals("") || 
            Alamat_dsn.equals("") || Telepon_dsn.equals("") || !Telepon_dsn.matches("[0-9]*") ||
            Email_dsn.equals("") || ttldsn.equals("") || ja_dsn.equals("")||!NIDN_dsn.matches("[0-9]*")
            || cb_pendidikan_dsn_baa.getSelectedIndex() == 0  || grp_jk_dsn_baa.getSelection() == null){
         
            if(cbx_nip_dsn_baa.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Mohon pilih data dosen yang akan diubah");
            }   
            else if(NIDN_dsn.equals("") || Nama_dsn.equals("") || 
                Alamat_dsn.equals("") || Telepon_dsn.equals("") ||
                Email_dsn.equals("") ||ttldsn.equals("") || ja_dsn.equals("")){
                JOptionPane.showMessageDialog(this, "Mohon isi semua Field");
            }
            else if(!NIDN_dsn.matches("[0-9]*")){
                JOptionPane.showMessageDialog(this, "Mohon isikan NIDN hanya dengan menggunakan angka");
            } 
            else if(!Telepon_dsn.matches("[0-9]*")){
                JOptionPane.showMessageDialog(this, "Mohon isikan No HP hanya dengan menggunakan angka");       
            }
           
            else if(cb_pendidikan_dsn_baa.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Mohon Pilih Pendidikan Tertinggi Dosen");       
            }
            else if(grp_jk_dsn_baa.getSelection() == null ){
                JOptionPane.showMessageDialog(this, "Mohon Pilih Jenis Kelamin");       
            }
                 
             
        }
        else{
            update_dsn();
        }
    }
    
    //untuk mengganti data dosen
    private void update_dsn(){
        deklarasi_dsn();
        try{
            String db_update_dsn = "UPDATE dosen SET nama_dosen = ? ,"
                    + "Alamat = ? ,Telepon = ? ,Email = ? ,Jenis_Kelamin = ? , "
                    + "Tempat_Tanggal_Lahir = ? ,Status_Kepegawaian = ? ,Pendidikan_Tertinggi = ?, Jabatan_Akademik = ? "
                    + "WHERE nip_dosen='"+cbx_nip_dsn_baa.getSelectedItem()+"'";
            PreparedStatement ps_up_dsn = con.prepareStatement(db_update_dsn);
            ps_up_dsn.setString(1, Nama_dsn);
            ps_up_dsn.setString(2, Alamat_dsn);
            ps_up_dsn.setString(3, Telepon_dsn);
            ps_up_dsn.setString(4, Email_dsn);
            ps_up_dsn.setString(5, jk_dsn);
            ps_up_dsn.setString(6, ttldsn);
            ps_up_dsn.setString(7, stts_dsn);
            ps_up_dsn.setString(8, ptn_dsn);
            ps_up_dsn.setString(9, ja_dsn);
            ps_up_dsn.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data pada NIP "+cbx_nip_dsn_baa.getSelectedItem()+ " telah berhasil diubah");
            
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }
    
    //untuk menampilkan daftar dosen
    private void list_dsn(){
        //untuk menampilkan list dosen
       try{
            String output_dsn = "SELECT * FROM dosen";
            PreparedStatement ps_dsn_list = con.prepareStatement(output_dsn);
            ResultSet res_dsn_list= ps_dsn_list.executeQuery();
            
            DefaultTableModel tb_list_dsn = (DefaultTableModel) list_all_dsn.getModel();
            
            tb_list_dsn.setRowCount(0);
            
            while(res_dsn_list.next()){
                Object data[] = new Object[8];
                data[0] = res_dsn_list.getString("nip_dosen");
                data[1] = res_dsn_list.getString("Email");
                data[2] = res_dsn_list.getString("nama_dosen");
                data[3] = res_dsn_list.getString("Alamat");
                data[4] = res_dsn_list.getString("Telepon");
                data[5] = res_dsn_list.getString("Jenis_Kelamin");
                data[6] = res_dsn_list.getString("Status_Kepegawaian");
                data[7] = res_dsn_list.getString("Jabatan_Akademik");
                
                tb_list_dsn.addRow(data);
                
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
 //AKADEMIK
    //untuk menampilkan mata kuliah
    private void tampil_matkul(){
        String prodi_tmpl_matkul = "hehe";
        CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
        cl_baa.show(panelinduk_baa, "cv_list_matkul_baa");
        title_baa.setText("List Matakuliah");
        
        try{
            String output_matkul = "SELECT * FROM mata_kuliah";
            PreparedStatement ps_mtkl_list = con.prepareStatement(output_matkul);
            ResultSet res_mtkl_list= ps_mtkl_list.executeQuery();
            DefaultTableModel tb_list_matkul = (DefaultTableModel) list_all_matkul.getModel();
            tb_list_matkul.setRowCount(0);
            
                    
            while(res_mtkl_list.next()){
            
                if(res_mtkl_list.getString("kode_mata_kuliah").startsWith("TI")){
                    prodi_tmpl_matkul = "TI";
                }
                else if(res_mtkl_list.getString("kode_mata_kuliah").startsWith("MI")){
                    prodi_tmpl_matkul = "MI";
                }
                else if(res_mtkl_list.getString("kode_mata_kuliah").startsWith("SI")){
                    prodi_tmpl_matkul = "SI";
                }
                else if(res_mtkl_list.getString("kode_mata_kuliah").startsWith("DK")){
                    prodi_tmpl_matkul = "DKV";
                }
                else{
                    prodi_tmpl_matkul = "";
                }
                
                Object data[] = new Object[5];
                data[0] = res_mtkl_list.getString("kode_mata_kuliah");
                data[1] = res_mtkl_list.getString("Periode");
                data[2] = 1;
                data[3] = res_mtkl_list.getString("nama_mata_kuliah");
                data[4] = prodi_tmpl_matkul;
                
                tb_list_matkul.addRow(data);
                
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    
// JADWAL
    //untuk mendapatkan list nama dosen
    private void tampil_dsn(){
        jdwl_dosen.removeAllItems();;
        jdwl_dosen.addItem("=== PILIH DOSEN ===");
        try{
            String con_get_dsn = "SELECT * from dosen";
            ResultSet res_get_dsn = con.prepareStatement(con_get_dsn).executeQuery();
            while(res_get_dsn.next()){
                jdwl_dosen.addItem(res_get_dsn.getString("nama_dosen"));
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk mengambil mata kuliah dan juga menampilkan mata kuliah tersebut
    private void get_mtkl(){
        cb_jdwl_matkul.removeAllItems();
        cb_jdwl_matkul.addItem("=== PILIH MATA KULIAH ===");
        try{
            String get_matkl = "SELECT * FROM mata_kuliah WHERE kode_mata_kuliah LIKE '%"+prodi_mk+"%'";
            ResultSet res_matkl = con.prepareStatement(get_matkl).executeQuery();
            while(res_matkl.next()){
                cb_jdwl_matkul.addItem(res_matkl.getString("nama_mata_kuliah"));
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
        
    }
    
    //untuk mereset waktu
    private void reset_waktu(){
        System.out.println("test");
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        
        Date date = cal.getTime();
        sp_waktu.setValue(date);
    }
    
    //untuk mereset field jadwal
    private void clear_jadwal(){
        reset_waktu();
        jdwl_dosen.setSelectedIndex(0);
        cb_jdwl_prodi.setSelectedIndex(0);
        cb_jdwl_matkul.setSelectedIndex(0);
        sp_jmlh_pertemuan.setValue(0);
        jdt_tgl_jdwl.setDate(null);
        cb_jdwl_ruang.setSelectedIndex(0);
        ccb_ti.setSelected(false);
        ccb_si.setSelected(false);
        ccb_mi.setSelected(false);
        ccb_dkv.setSelected(false);
    }
    
    //untuk mendeklarasikan jadwal
    private void  deklarasi_jadwal(){
        jdwl_prodi = "";
        //untuk mencegah eror
        if(cb_jdwl_matkul.getSelectedIndex()<0){
            mtkl_jdwl = "pilih matkul";
        }
        else{
            mtkl_jdwl = cb_jdwl_matkul.getSelectedItem().toString();
        }
        nama_dsn_jdwl = jdwl_dosen.getSelectedItem().toString();
        jmlh_pert = (Integer) sp_jmlh_pertemuan.getValue();
        ruang = hapus_tanda(cb_jdwl_ruang.getSelectedItem().toString());
        
        if(ccb_ti.isSelected()){
            if(jdwl_prodi.contains("TI")){
            }
            else{
                jdwl_prodi += " ,TI";  
            }
        }
        if(ccb_si.isSelected()){
            if(jdwl_prodi.contains("SI")){
            }
            else{
                jdwl_prodi += " ,SI";  
            }
        }
        if(ccb_mi.isSelected()){
            if(jdwl_prodi.contains("MI")){
            }
            else{
                jdwl_prodi += " ,MI"; 
            }
        }
        if(ccb_dkv.isSelected()){
            if(jdwl_prodi.contains("DKV")){
            }
            else{
                jdwl_prodi += " ,DKV";  
            }
        }
        
        DateFormat df =  new SimpleDateFormat ("yyyy-MM-dd");
        
        try{
            sd_tgl_jdwl = df.format(jdt_tgl_jdwl.getDate()); 
        }    
        catch(Exception e){
            System.out.println(e);
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        waktu = sdf.format(sp_waktu.getValue());
        st_wkt = waktu.toString();
        
    }
    
    //untuk mendapatkan data dari database
    private void getdata_jadwal_db(){
        try{
            deklarasi_jadwal();
            //untik mengambil nip dosen
            String get_dosen = "SELECT * FROM dosen WHERE nama_dosen='"+nama_dsn_jdwl+"'";
            ResultSet res_nip_dosen = con.prepareStatement(get_dosen).executeQuery();
            if(res_nip_dosen.next()){
                get_nip_dsn_jdwl = res_nip_dosen.getString("nip_dosen");
            }
            
            //untuk mengambil kode_matkul
            String get_mk = "SELECT * FROM mata_kuliah WHERE nama_mata_kuliah='"+mtkl_jdwl+"'";
            ResultSet res_mk = con.prepareStatement(get_mk).executeQuery();
            if(res_mk.next()){
                get_kode_mk_jdwl = res_mk.getString("kode_mata_kuliah");
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }
    
    //untuk mengecek apakah ada field yang kosong
    private void  cek_add_jadwal(){
        deklarasi_jadwal();
        getdata_jadwal_db();
        if(jdwl_dosen.getSelectedIndex() == 0 || cb_jdwl_prodi.getSelectedIndex() == 0 ||
                cb_jdwl_matkul.getSelectedIndex() == 0 || jdt_tgl_jdwl == null ||
                (Integer) sp_jmlh_pertemuan.getValue() == 0 || sp_waktu.equals("00:00") ||
                cb_jdwl_ruang.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Mohon cek kembali field anda");
            
        }
        else{
            cek_add_db_jadwal();
        }
    }
    
    //pengecekan ke 2 ke databse 
    private void  cek_add_db_jadwal(){
        try{
            //cek mata kuliah
            String db_mtkl = "SELECT matkul.nama_mata_kuliah matakuliah\n" +
                                "FROM jadwal INNER JOIN mata_kuliah matkul\n" +
                                "ON jadwal.kode_mata_kuliah = matkul.kode_mata_kuliah\n" +
                                "WHERE matkul.nama_mata_kuliah ='"+mtkl_jdwl+"' \n" +
                                "GROUP BY matkul.nama_mata_kuliah;";
            ResultSet res_mtkl = con.prepareStatement(db_mtkl).executeQuery();
            
            if(res_mtkl.next()){
                JOptionPane.showMessageDialog(this, "Matakuliah "+mtkl_jdwl+" sudah terdaftar");
            }
            else{
                //cek jadwal dan kelas
                String db_cdwl_kls = "SELECT * FROM kelas where waktu ='"+sd_tgl_jdwl+" "
                    + ""+st_wkt+"' AND ruang='"+ruang+"'";
                ResultSet res_cdwl_kls = con.prepareStatement(db_cdwl_kls).executeQuery();
                if(res_cdwl_kls.next()){
                    JOptionPane.showMessageDialog(this, "ruangan sudah terpakai oleh kelas lain");
                }
                else{

                    //untuk cek dosen dan jadwal
                    String db_cdwl_dsn = "SELECT jd.nip_dosen, kl.waktu FROM jadwal jd "
                        + "INNER JOIN Kelas kl ON jd.id_kelas = kl.id_kelas "
                        + "where kl.waktu ='"+sd_tgl_jdwl+" "+st_wkt+"' AND jd.nip_dosen='"+get_nip_dsn_jdwl+"'";
                    ResultSet res_cdwl_dsn = con.prepareStatement(db_cdwl_dsn).executeQuery();
                    if(res_cdwl_dsn.next()){
                       JOptionPane.showMessageDialog(this, "dosen sudah terdaftar pada jadwal tersebut");
                    }
                    else{
                       insert_jadwal(); 
                    }

                }
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());  
        }
    }
    
    //untuk menyimpan data jadwal
    private void insert_jadwal(){
        int jmlh_field, intkode=0;
        String id_kls_baru;
        
        try{
            //untuk mengecek banyaknya field kelas
            String get_jmlhfield = "SELECT COUNT(*) AS Field FROM kelas";
            ResultSet res_jmlhfield = con.prepareStatement(get_jmlhfield).executeQuery();
            if(res_jmlhfield.next()){
                jmlh_field = res_jmlhfield.getInt("Field");
                
                if(jmlh_field <= 0){
                    intkode = 0;
                }
                else{
                   //untuk membuat id kelas secara otomatis
                    String get_idk = "SELECT * FROM kelas ORDER BY id_kelas DESC LIMIT 1";
                    ResultSet res_idk = con.prepareStatement(get_idk).executeQuery();
                    if(res_idk.next()){
                        String kelas_kode_idk = hapus_tanda(res_idk.getString("id_kelas"));
                        intkode = Integer.parseInt(kelas_kode_idk);
                    } 
                }
                String hmmtanggal = sd_tgl_jdwl;
                for(int i = 0 ; i < jmlh_pert; i++){
                    System.out.println(st_wkt);
                    System.out.println(intkode);
                    intkode++;

                    if(intkode < 10){
                         kode_kelas = "KT00"+ String.valueOf(intkode);
                    }
                    else if (intkode >= 10 && intkode < 100){
                        kode_kelas = "KT0"+ String.valueOf(intkode);
                    }
                    else if(intkode >= 100){
                        kode_kelas = "KT"+ String.valueOf(intkode);
                    }


                    int pert = i+1;

                    java.text.SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    Date date = sdf.parse(hmmtanggal+" "+st_wkt+":00");

                    java.sql.Timestamp sql_waktu = new java.sql.Timestamp(date.getTime());
                    String input_kls = "INSERT INTO kelas(id_kelas, kelas, pertemuan, waktu, ruang)"
                                + "VALUES (?,?,?,?,?)";
                    PreparedStatement ps_add_kls = con.prepareStatement(input_kls);
                    ps_add_kls.setString(1, kode_kelas);
                    ps_add_kls.setString(2, "D3");
                    ps_add_kls.setInt(3, pert);
                    ps_add_kls.setTimestamp(4, sql_waktu);
                    ps_add_kls.setString(5, ruang);

                    LocalDate tanggal_baru = LocalDate.parse(hmmtanggal).plusDays(7);
                    hmmtanggal = tanggal_baru.toString();

                    if(ps_add_kls.executeUpdate() > 0){
                       //untuk menginputkan ke data jadwal
                        String input_jdwl = "INSERT INTO jadwal(id_kelas, nip_dosen, kode_mata_kuliah, prodi)"
                        + "VALUES (?,?,?,?)";
                        PreparedStatement ps_add_jdwl = con.prepareStatement(input_jdwl);
                        ps_add_jdwl.setString(1, kode_kelas);
                        ps_add_jdwl.setString(2, get_nip_dsn_jdwl);
                        ps_add_jdwl.setString(3, get_kode_mk_jdwl);
                        ps_add_jdwl.setString(4, hapus_tanda(jdwl_prodi)); 

                        if(ps_add_jdwl.executeUpdate() > 0){
                            if(i+1 == jmlh_pert){
                                JOptionPane.showMessageDialog(this, "Jadwal Sudah ditambahkan sebanyak "+jmlh_pert+" Pertemuan");
                                CardLayout cl_baa = (CardLayout) panelinduk_baa.getLayout();
                                cl_baa.show(panelinduk_baa, "cv_add_jdwl");
                                title_baa.setText("Tambah Jadwal");
                                reset_waktu();
                                tampil_dsn();
                                clear_jadwal();
                            }
                        }
                    }
                }
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk menampilkan data jadwal
    private void list_jadwal(){
       try{
            String dmkj = "select mk.Periode periode,\n" +
                            "cast(k.waktu AS DATE) tanggal,\n" +
                            "cast(k.waktu AS TIME) waktu, mk.nama_mata_kuliah matkul,\n" +
                            "k.ruang ruang, dsn.nama_dosen nm_dosen, j.prodi prodi\n" +
                            "FROM jadwal j\n" +
                            "INNER JOIN mata_kuliah mk ON mk.kode_mata_kuliah = j.kode_mata_kuliah\n" +
                            "INNER JOIN kelas k ON k.id_kelas = j.id_kelas\n" +
                            "INNER JOIN dosen dsn ON dsn.nip_dosen = j.nip_dosen\n" +
                            "GROUP BY matkul ORDER BY tanggal";
            
            ResultSet res_dmkj = con.prepareStatement(dmkj).executeQuery();
            DefaultTableModel dtj = (DefaultTableModel) TabelJadwal.getModel();
            dtj.setRowCount(0);
            
            while(res_dmkj.next()){
                Object data[] = new Object[7];
                data[0] = res_dmkj.getString("periode");
                data[1] = res_dmkj.getString("tanggal");
                data[2] = res_dmkj.getString("waktu");
                data[3] = res_dmkj.getString("matkul");
                data[4] = res_dmkj.getString("ruang");
                data[5] = res_dmkj.getString("nm_dosen");
                data[6] = res_dmkj.getString("prodi");
                
                dtj.addRow(data);
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
        
    }
    
    //untuk menampilkan data mahasiswa wisuda yang sudah di acc
    private void sudah_acc_wsd(){
        DefaultTableModel df_wisuda_baa = (DefaultTableModel) tbl_wisuda_baa.getModel();
        df_wisuda_baa.setRowCount(0);
        try{
            String acc_sql ="SELECT wis.NRP, mhs.nama_mahasiswa, mhs.Prodi, mhs.Email, wis.IPK\n" +
                            "FROM Wisuda wis\n" +
                            "INNER JOIN Mahasiswa mhs ON wis.NRP = mhs.NRP\n" +
                            "WHERE wis.Status = 'ACC'\n" +
                            "ORDER BY mhs.NRP ASC";
            ResultSet res_acc = con.prepareStatement(acc_sql).executeQuery();

            while(res_acc.next()){
                Object data_wisuda[] = new Object[5];
                data_wisuda[0] = res_acc.getInt("wis.NRP");
                data_wisuda[1] = res_acc.getString("mhs.nama_mahasiswa");
                data_wisuda[2] = res_acc.getString("mhs.Prodi");
                data_wisuda[3] = res_acc.getString("mhs.Email");
                data_wisuda[4] = res_acc.getString("wis.IPK");
                
                df_wisuda_baa.addRow(data_wisuda);
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
       
    }
    
//WISUDA
    //untuk menampilkan data mahasiswa wisuda yang sudah masih proses
    private void proses_wsd(){
        DefaultTableModel df_wisuda_baa = (DefaultTableModel) tbl_wisuda_baa.getModel();
        df_wisuda_baa.setRowCount(0);
        try{
            String proses_sql ="SELECT wis.NRP, mhs.nama_mahasiswa, mhs.Prodi, mhs.Email, wis.IPK\n" +
                            "FROM Wisuda wis\n" +
                            "INNER JOIN Mahasiswa mhs ON wis.NRP = mhs.NRP\n" +
                            "WHERE wis.Status = 'Proses' \n" +
                            "ORDER BY mhs.NRP ASC";
            ResultSet res_proses = con.prepareStatement(proses_sql).executeQuery();

            while(res_proses.next()){
                Object data_wisuda[] = new Object[5];
                data_wisuda[0] = res_proses.getInt("wis.NRP");
                data_wisuda[1] = res_proses.getString("mhs.nama_mahasiswa");
                data_wisuda[2] = res_proses.getString("mhs.Prodi");
                data_wisuda[3] = res_proses.getString("mhs.Email");
                data_wisuda[4] = res_proses.getString("wis.IPK");
                
                df_wisuda_baa.addRow(data_wisuda);
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
       
    }
    
    //untuk mereset semua field wisuda
    private void clear_wsd(){
        cb_wsd_prodi_baa.setSelectedIndex(0);
        cb_wsd_mhs_baa.setSelectedIndex(0);
        cb_wsd_dsn_pbb_baa.setSelectedIndex(0);
        txt_ipk_wsd_baa.setText("");
        txt_judul_ta_baa.setText("");
        ntf_fotowsd.setText("");
    }
    
    //untuk mendeklarasi field wisuda
    private void deklarasi_wsd(){
        ipk_wsd = txt_ipk_wsd_baa.getText();
        jdl_wsd = txt_judul_ta_baa.getText();
    }
    
    //untuk mengecek apakah ada field yang kosong
    private void cek_wsd(){
        deklarasi_wsd();
        if(cb_wsd_prodi_baa.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Prodi");
        }
        else if(cb_wsd_mhs_baa.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Mohon Pilih Mahasiswa");
        }
        else if(cb_wsd_dsn_pbb_baa.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Mohon Pilih Dosen Pembimbing");
        }
        else if(ipk_wsd.equals("") || jdl_wsd.equals("")){
            JOptionPane.showMessageDialog(this, "Mohon cek kembali field anda");
        }
        else if(!ipk_wsd.matches("[0-9].[0-9]")){
           JOptionPane.showMessageDialog(this, "Mohon masukkan IPK hanya angka dengan format double"); 
        }
        else if(Double.valueOf(ipk_wsd) > 4.0){
           JOptionPane.showMessageDialog(this, "Mohon masukkan IPK dengan format angka kurang dari 4.0"); 
        }
        
        else{
            ubah_nrp_nip();
            insert_db_wsd();
        }
    }
    
    //untuk mengambil nrp, nama mahasiswa wisuda dari database
    private void tampil_db_mhs_wsd(){
        cb_wsd_mhs_baa.removeAllItems();
        cb_wsd_mhs_baa.addItem("=== PILIH MAHASISWA ===");
        try{
            String get_db_mhs_wsd = "SELECT nrp, nama_mahasiswa FROM mahasiswa\n"+
                                    "WHERE prodi LIKE '%"+prodi_wsd+"%'";
            ResultSet res_db_mhs_wsd = con.prepareStatement(get_db_mhs_wsd).executeQuery();
            while(res_db_mhs_wsd.next()){
                cb_wsd_mhs_baa.addItem("> " +res_db_mhs_wsd.getString("nrp")+
                                       " - " +res_db_mhs_wsd.getString("nama_mahasiswa"));
            }
                                    
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk menampilkan nama dosen
    private void tampildb_dsn_wsd(){
        cb_wsd_dsn_pbb_baa.removeAllItems();
        cb_wsd_dsn_pbb_baa.addItem("=== PILIH DOSEN PEMBIMBING ===");
        
        try{
            String tampil_db_dsn_wsd = "SELECT * FROM dosen";
            ResultSet res_tampil_db_dsn_wsd = con.prepareStatement(tampil_db_dsn_wsd).executeQuery();
            
            while(res_tampil_db_dsn_wsd.next()){
                cb_wsd_dsn_pbb_baa.addItem( "> " +res_tampil_db_dsn_wsd.getString("nip_dosen")+
                                            " - " +res_tampil_db_dsn_wsd.getString("nama_dosen"));
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk mengubah data menjadi nrp/nip
    private void  ubah_nrp_nip(){
        try{
            String ubah_nrp_db= "SELECT * FROM mahasiswa \n"+
                                "WHERE nama_mahasiswa = '"
                                +hapus_tanda_nrp(cb_wsd_mhs_baa.getSelectedItem().toString())+"'";
            
            
            ResultSet res_ubah_nrp_db = con.prepareStatement(ubah_nrp_db).executeQuery();
            
            if(res_ubah_nrp_db.next()){
                nrp_wsd = res_ubah_nrp_db.getString("nrp");
                String ubah_nip_db= "SELECT * FROM dosen \n"+
                                "WHERE nama_dosen = '"
                                +hapus_tanda_nip(cb_wsd_dsn_pbb_baa.getSelectedItem().toString())+"'"; 
            
            
                ResultSet res_ubah_nip_db = con.prepareStatement(ubah_nip_db).executeQuery();
                if(res_ubah_nip_db.next()){
                    nip_wsd = res_ubah_nip_db.getString("nip_dosen");  
                }
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk menyimpan data ke database
    private void insert_db_wsd(){
        FileInputStream up_foto = null;
        try{
            //untuk mengecek nrp sudah terdatar di list wisuda atau tidak
            String cek_db_mhs_wsd = "SELECT * FROM wisuda where nrp LIKE '%"+nrp_wsd+"%'";
            ResultSet res_cek_db_mhs_wsd = con.prepareStatement(cek_db_mhs_wsd).executeQuery();
            if(res_cek_db_mhs_wsd.next()){
                JOptionPane.showMessageDialog(this, "Mahasiswa dengan "+nrp_wsd+" sudah ada di dalam list");
            }
            else{
                up_foto = new FileInputStream(path_foto);
                String add_db_wsd = "INSERT INTO wisuda(nrp, ipk, judul_ta, nip_dosen, Status, Bukti_Pembayaran) "+
                                 "VALUES (?,?,?,?,?,?)";
                PreparedStatement ps_inst_db_wsd = con.prepareStatement(add_db_wsd);
                ps_inst_db_wsd.setString(1, nrp_wsd);
                ps_inst_db_wsd.setString(2, ipk_wsd);
                ps_inst_db_wsd.setString(3, jdl_wsd);
                ps_inst_db_wsd.setString(4, nip_wsd);
                ps_inst_db_wsd.setString(5, "ACC");
                ps_inst_db_wsd.setBinaryStream(6, up_foto);
                ps_inst_db_wsd.executeUpdate();
                JOptionPane.showMessageDialog(this, "pendaftaran wisuda oleh NRP "+nrp_wsd+" telah berhasil ditambahkan");
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    //untuk menyimpan bukti pembayaran
    private void insert_bukti_pem(){
        JFileChooser j_file_bukti = new JFileChooser();
        j_file_bukti.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        //untuk memfilter file gambar
        FileNameExtensionFilter filter_gambar = new FileNameExtensionFilter("*Images", "*.jpg", "*.png", "*.jpeg", "*.JPG", "*.PNG", "*.JPEG");
        j_file_bukti.addChoosableFileFilter(filter_gambar);
        
        int result_bukti = j_file_bukti.showSaveDialog(null);
        File pilih_file = j_file_bukti.getSelectedFile();
        if(result_bukti == 0){
            String file_name = pilih_file.getName();
            if(file_name.endsWith(".jpg") || file_name.endsWith(".png") || file_name.endsWith(".jpeg") 
                    || file_name.endsWith(".JPG") || file_name.endsWith(".PNG") || file_name.endsWith(".JPEG")){
                if (result_bukti == JFileChooser.APPROVE_OPTION) {
                    path_foto = pilih_file.getAbsolutePath();
                    ntf_fotowsd.setText(path_foto);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Mohon masukkan hanya gambar");
            }
        }
        
    }
    
    //untuk menghapus tanda ">"
    private String hapus_tanda(String str){
        return str.substring(2);
    }
    
    //untuk menghapus > nip
    private String hapus_tanda_nip(String str){
        return str.substring(15);
    }
    
    //untuk menghapus > nrp
    private String hapus_tanda_nrp(String str){
        return str.substring(14);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(framebaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(framebaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(framebaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(framebaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new framebaa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_Gabungan;
    private javax.swing.JTable TabelJadwal;
    private javax.swing.JMenuItem add_Jadwal;
    private javax.swing.JMenuItem add_data_dsn;
    private javax.swing.JMenuItem add_data_mhs;
    private javax.swing.JPanel border;
    private javax.swing.JPanel border1;
    private javax.swing.JPanel border2;
    private javax.swing.JPanel border3;
    private javax.swing.JButton btnFoto_wsd_baa;
    private javax.swing.JButton btn_Ubah_dsn_baa;
    private javax.swing.JButton btn_add_mhs_wisuda;
    private javax.swing.JButton btn_back_mhs;
    private javax.swing.JButton btn_clear_jadwal;
    private javax.swing.JButton btn_clear_mhs_baa;
    private javax.swing.JButton btn_clear_ortu_baa;
    private javax.swing.JButton btn_detail;
    private javax.swing.JButton btn_hps_dsn;
    private javax.swing.JButton btn_reset_dsn;
    private javax.swing.JButton btn_terima;
    private javax.swing.JButton btn_tolak;
    private javax.swing.JButton btnadd_jadwal;
    private javax.swing.JButton btnadd_mhs_baa;
    private javax.swing.JButton btnadd_ortu_baa;
    private javax.swing.JComboBox<String> cb_NRP_baa;
    private javax.swing.JCheckBox cb_Status_dsn_baa;
    private javax.swing.JCheckBox cb_Status_mhs_baa;
    private javax.swing.JComboBox<String> cb_jdwl_matkul;
    private javax.swing.JComboBox<String> cb_jdwl_prodi;
    private javax.swing.JComboBox<String> cb_jdwl_ruang;
    private javax.swing.JComboBox<String> cb_kota_ortu_baa;
    private javax.swing.JComboBox<String> cb_pendidikan_dsn_baa;
    private javax.swing.JComboBox<String> cb_wsd_dsn_pbb_baa;
    private javax.swing.JComboBox<String> cb_wsd_mhs_baa;
    private javax.swing.JComboBox<String> cb_wsd_prodi_baa;
    private javax.swing.JComboBox<String> cbx_Agama_mhs_baa;
    private javax.swing.JComboBox<String> cbx_Prodi_baa;
    private javax.swing.JComboBox<String> cbx_kota_mhs_baa;
    private javax.swing.JComboBox<String> cbx_nip_dsn_baa;
    private javax.swing.JCheckBox ccb_dkv;
    private javax.swing.JCheckBox ccb_mi;
    private javax.swing.JCheckBox ccb_si;
    private javax.swing.JCheckBox ccb_ti;
    private javax.swing.ButtonGroup grp_jk_dsn_baa;
    private javax.swing.ButtonGroup grp_jk_mhs_baa;
    private javax.swing.JPanel input_dsn;
    private javax.swing.JPanel input_jadwal;
    private javax.swing.JPanel input_mhs;
    private javax.swing.JPanel input_mhs_wisuda;
    private javax.swing.JPanel input_ortu;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel11_dsn;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel12_dsn;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel1_dsn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel21_dsn;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel2_dsn;
    private javax.swing.JLabel jLabel2_dsn1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel3_dsn;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel5_dsn;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel6_dsn;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel7_dsn;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel8_dsn;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel9_dsn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private com.toedter.calendar.JDateChooser jdt_tgl_jdwl;
    private javax.swing.JComboBox<String> jdwl_dosen;
    private javax.swing.JLabel lb_almt_ortu;
    private javax.swing.JLabel lb_kota_ortu;
    private javax.swing.JLabel lb_ldt_ayah;
    private javax.swing.JLabel lb_ldt_ibu;
    private javax.swing.JLabel lb_telp_ortu;
    private javax.swing.JTable list_all_dsn;
    private javax.swing.JTable list_all_mahasiswa;
    private javax.swing.JTable list_all_matkul;
    private javax.swing.JMenuItem list_data_dsn;
    private javax.swing.JMenuItem list_data_jadwal;
    private javax.swing.JMenuItem list_data_mhs;
    private javax.swing.JMenuItem list_data_mk;
    private javax.swing.JMenu menu_akademik;
    private javax.swing.JMenu menu_dosen;
    private javax.swing.JMenu menu_logout;
    private javax.swing.JMenu menu_mhs;
    private javax.swing.JMenuItem mn_list_wis_acc;
    private javax.swing.JMenu mn_mhs;
    private javax.swing.JMenuItem mn_peng_wis;
    private javax.swing.JMenuItem mn_tmbh_wsd;
    private javax.swing.JMenu mn_wisuda;
    private javax.swing.JLabel ntf_fotowsd;
    private javax.swing.JPanel panel_add_jadwal;
    private javax.swing.JPanel panel_add_mhs;
    private javax.swing.JPanel panel_add_ortu;
    private javax.swing.JPanel panel_add_wsd_mhs;
    private javax.swing.JPanel panel_detail_mhs;
    private javax.swing.JPanel panel_dsn;
    private javax.swing.JPanel panel_dsn_tabel;
    private javax.swing.JPanel panel_jadwal;
    private javax.swing.JPanel panel_list_matkul;
    private javax.swing.JPanel panel_list_mhs;
    private javax.swing.JPanel panel_matkul;
    private javax.swing.JPanel panel_mhs_tabel;
    private javax.swing.JPanel panel_nrp;
    private javax.swing.JPanel panel_wisuda_baa;
    private javax.swing.JPanel panelinduk_baa;
    private javax.swing.JPanel panelnip;
    private javax.swing.JPanel pnl_jk_dsn;
    private javax.swing.JPanel pnl_jk_mhs_baa;
    private javax.swing.JRadioButton rd_laki_dsn_baa;
    private javax.swing.JRadioButton rd_laki_mhs;
    private javax.swing.JRadioButton rd_perempuan_dsn_baa;
    private javax.swing.JRadioButton rd_perempuan_mhs;
    private javax.swing.JSpinner sp_jmlh_pertemuan;
    private javax.swing.JSpinner sp_waktu;
    private javax.swing.JTable tbl_wisuda_baa;
    private javax.swing.JLabel title_baa;
    private javax.swing.JTextField txt_Alamat_dsn_baa;
    private javax.swing.JTextField txt_Alamat_mhs_baa;
    private javax.swing.JTextField txt_Email_mhs_baa;
    private javax.swing.JTextField txt_NIDN_dsn_baa;
    private javax.swing.JTextField txt_NIP_dsn_baa;
    private javax.swing.JTextField txt_NRP_baa;
    private javax.swing.JTextField txt_Nama_dsn_baa;
    private javax.swing.JTextField txt_Nama_mhs_baa;
    private javax.swing.JTextField txt_alamatortu_baa;
    private javax.swing.JTextField txt_email_dsn_baa;
    private javax.swing.JTextField txt_ipk_wsd_baa;
    private javax.swing.JTextField txt_jbtn_dsn_baa;
    private javax.swing.JTextField txt_judul_ta_baa;
    private javax.swing.JTextField txt_nohp_dsn_baa;
    private javax.swing.JTextField txt_nohp_mhs_baa;
    private javax.swing.JTextField txt_telp_ortu_baa;
    private javax.swing.JTextField txt_ttl_dsn_baa;
    private javax.swing.JTextField txt_ttl_mhs_baa;
    private javax.swing.JTextField txtktp_ayah_baa;
    private javax.swing.JTextField txtktp_ibu_baa;
    private javax.swing.JTextField txtnm_ayah_baa;
    private javax.swing.JTextField txtnm_ibu_baa;
    private javax.swing.JMenuItem update_data_dsn;
    private javax.swing.JMenuItem update_data_mhs;
    // End of variables declaration//GEN-END:variables
}
